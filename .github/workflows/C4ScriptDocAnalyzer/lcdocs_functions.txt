[Function]
Name=AbortMessageBoard
Return=bool
Parameter=object pObj, int iPlr
DescDE=aufgerufene Eingabezeile.

[Function]
Name=Abs
Return=int
Parameter=int iValue
DescDE=Bildet den Absolutwert (Betrag), entfernt also das Vorzeichen des ersten Parameters.

[Function]
Name=AbsX
Return=int
Parameter=int iX
DescDE=Liefert das relative X in Bezug auf Objektmitte wenn von einem Objekt aufgerufen. Sonst liefert diese Funktion das übergebene X zurück

[Function]
Name=AbsY
Return=int
Parameter=int iY
DescDE=Liefert das relative Y in Bezug auf Objektmitte wenn von einem Objekt aufgerufen. Sonst liefert diese Funktion das übergebene Y zurück

[Function]
Name=ActIdle
Return=bool
Parameter=object pObj
DescDE=Prüft, ob das Objekt eine Aktivität ausführt. Bei lokalem Aufruf kann pObj == 0 sein.

[Function]
Name=Activate
Return=bool
Parameter=object obj
DescDE=Wenn ein Spieler Doppelgraben drückt, wird zunächst "ControlDigDouble" im Clonk aufgerufen. Gibt dieses false zurück oder existiert nicht, und der Clonk läuft, schwimmt oder gräbt, wird im ersten Inhaltsobjekt Activate aufgerufen. Wenn dieses nicht existiert oder false zurückgibt, wird zuerst versucht, einen Baum zu fällen oder eine Leitung abzunehmen. Danach wird Activate im Clonk selbst aufgerufen.

[Function]
Name=AddCommand
Return=bool
Parameter=object pObj, string szCommand, object pTarget, int iX, int iY, object pTarget2, int iInterval, any Data, int iRetries, int iBaseMode
DescDE=

[Function]
Name=AddEffect
Return=int
Parameter=string szEffectName, object pTarget, int iPrio, int iTimerIntervall, object pCmdTarget, id idCmdTarget, any var1, any var2, any var3, any var4
DescDE=Erzeugt einen Effekt. Rückgabewert ist der Effektindex bei Erfolg, oder 0 bei Fehlschlag (weil der Effekt beispielsweise abgelehnt wurde). Wenn der Effekt von einem anderen Effekt aufgenommen wurde, der sich in demselben Aufruf entfernt, wird -2 zurückgegeben.

[Function]
Name=AddEvaluationData
Return=void
Parameter=string szData
DescDE=Zeigt szData im Auswertungsdialog am Ende der Runde an.

[Function]
Name=AddMenuItem
Return=int
Parameter=string szCaption, string szCommand, id idItem, object pMenuObject, int iCount, int iParameter, string szInfoCaption, int iExtra, any XPar1, any XPar2
DescDE=Fügt einen Menüeintrag hinzu.

[Function]
Name=AddMessage
Return=bool
Parameter=string strMessage
DescDE=ausgegebenen Nachricht hinzu. Die Anzeigezeit der Nachricht wird 
		um die de angehängten Nachricht verlängert. Zwischen die originale und die hinzugefügte Nachricht wird ein Zeilenumbruch eingefügt.

[Function]
Name=AddMsgBoardCmd
Return=int
Parameter=string strCommand, string strScript, int iRestriction
DescDE=Erzeugt ein neues selbstdefiniertes Messageboard-Kommando. Dieses Kommando kann von jedem Spieler im Spiel durch Eingabe von "/[Kommandoname]" aufgerufen werden.
          In dem Fall wird der angegebene Script ausgeführt. Im Script kann "%s" dafür verwendet werden, eventuell angegebene Parameter einzubinden.

[Function]
Name=AddVertex
Return=int
Parameter=int iX, int iY, object pObj
DescDE=Fügt dem Objekt pObj einen neuen Vertex hinzu.

[Function]
Name=Angle
Return=int
Parameter=int iX1, int iY1, int iX2, int iY2, int iPrec
DescDE=Liefert den Winkel, in dem sich der zweite Punkt vom ersten Punkt aus gesehen befindet. Der Winkel wird in Grad zurückgeliefert, 0° ist senkrecht oben. Alle Koordinaten sind global.

[Function]
Name=AnyContainer
Return=int
Parameter=int iX1, int iY1, int iX2, int iY2, int iPrec
DescDE=übergeben, damit nur Objekte gefunden werden, die in einem anderen Objekt enthalten sind

[Function]
Name=AppendCommand
Return=bool
Parameter=object pObj, string szCommand, object pTarget, int iX, int iY, object pTarget2, int iInterval, any Data, int iRetries, int iBaseMode
DescDE=Bemerkung: Mit AppendCommand hinzugefügte Befehle werden nicht an gesteuerte Fahrzeuge weitergeleitet (siehe VehicleControl)

[Function]
Name=ArcCos
Return=int
Parameter=int iVal, int iRadius
DescDE=() aber ausreichend und praktischer.

[Function]
Name=ArcSin
Return=int
Parameter=int iVal, int iRadius
DescDE=() aber ausreichend und praktischer.

[Function]
Name=BlastFree
Return=void
Parameter=int iX, int iY, int iRadius, int iCausedBy
DescDE="Sprengt" ein kreisförmiges Loch in die Landschaft. Materialien werden dabei zu den jeweiligen Objekten abgebaut, etwa Gold zu Goldklumpen.

[Function]
Name=BlastObjects
Return=void
Parameter=int iX, int iY, int iLevel, object pContainer, int iCausedBy
DescDE=Fügt allen Objekten an angegebener Position Explosionsschaden zu. iX und iY sind immer globale Koordinaten. Wenn ein pContainer angegeben ist, wird der Schaden nur den Objekten zugefügt, die in pContainer enthalten sind. Explosionsschaden kann zur Entzündung führen oder auch Lebewesen wegschleudern. Bei lokalen Aufrufen gilt der Schaden als vom Controller des aufrufenden Objekts verursacht.

[Function]
Name=BoundBy
Return=int
Parameter=int iVal, int iRange1, int iRange2
DescDE=Gibt iVal zurück, wenn der Wert innerhalb der Grenzen liegt (iVal >= iRange1 und iVal <= iRange2). Andernfalls wird die jeweils nächstliegende Grenze zurückgegeben.

[Function]
Name=Bubble
Return=void
Parameter=int iX, int iY
DescDE=Erzeugt eine Luftblase.

[Function]
Name=Buy
Return=object
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Kauft ein Objekt für iForPlr, und zieht iPayPlr Geld ab. Wenn dieser nicht genug Geld oder das Objekt nicht im Heimatbasismaterial hat, wird der Vorgang nicht ausgeführt.

[Function]
Name=C4D_All
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Alle Kategorien

[Function]
Name=C4D_Background
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Wird hinter der Landschaft gezeichnet. Nützlich beispielsweise für Effektobjekte wie Wolken oder Himmelskörper.

[Function]
Name=C4D_Goal
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Spielziele

[Function]
Name=C4D_Knowledge
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Bauplan.

[Function]
Name=C4D_Living
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Lebewesen.

[Function]
Name=C4D_Object
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: kleines Objekt.

[Function]
Name=C4D_Parallax
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Um Objekte direkt am Sichtfenster des Spielers zu positionieren, um so zum Beispiel Statusanzeigen zu realisieren, können Local(0) und Local(1) auf 0 gesetzt werden. Die Objektposition ist dann immer relativ zur oberen linken Ecke des Sichtfensters. Ab CR können für die Position solcher Objekte auch negative Werte angegeben werden: Diese werden dann jeweils vom rechten bzw. unteren Rand des Sichtfensters gerechnet. Auf diese Weise lassen sich Statusanzeigen auch am rechten oder unteren Rand der Sichtfenster platzieren.

[Function]
Name=C4D_Rule
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Spielregeln

[Function]
Name=C4D_StaticBack
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Unbewegliche Hintergrundobjekte.

[Function]
Name=C4D_Structure
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Gebäude.

[Function]
Name=C4D_Vehicle
Return=int
Parameter=id idBuyObj, int iForPlr, int iPayPlr, object pToBase, bool fShowErrors
DescDE=Objektkategorie: Fahrzeug.

[Function]
Name=C4Id
Return=id
Parameter=string szID
DescDE=Wandelt einen String in eine ID um.

[Function]
Name=C4V_Any
Return=int
Parameter=string szID
DescDE=Datentyp: Unbekannter Datentyp.

[Function]
Name=C4V_Array
Return=int
Parameter=string szID
DescDE=Datentyp: Array.

[Function]
Name=C4V_Bool
Return=int
Parameter=string szID
DescDE=Datentyp: Boolscher Wert (1 oder 0).

[Function]
Name=C4V_C4ID
Return=int
Parameter=string szID
DescDE=Datentyp: id.

[Function]
Name=C4V_C4Object
Return=int
Parameter=string szID
DescDE=Datentyp: Objektzeiger.

[Function]
Name=C4V_Int
Return=int
Parameter=string szID
DescDE=Datentyp: Ganzzahl.

[Function]
Name=C4V_String
Return=int
Parameter=string szID
DescDE=Datentyp: Zeichenkette.

[Function]
Name=COMD_Down
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_DownLeft
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_DownRight
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_Left
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_None
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_Right
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_Stop
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_Up
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_UpLeft
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=COMD_UpRight
Return=int
Parameter=string szID
DescDE=.

[Function]
Name=Call
Return=any
Parameter=string szFunction, any ...
DescDE=Ruft die lokale Funktion szFunction auf. Stattdessen sollte dieselbe Syntax wie bei engineinternen Funktionen genutzt werden.

[Function]
Name=CallMessageBoard
Return=bool
Parameter=object pCallbackObject, bool bCapitalize, string szTitle, int iPlayer
DescDE=aufgerufen, wobei szInput die Eingabe enthält.

[Function]
Name=CastAny
Return=any
Parameter=any Value
DescDE=Wandelt einen Wert in einen Wert vom Typ any um.

[Function]
Name=CastBackParticles
Return=bool
Parameter=string szName, int iAmount, int iLevel, int iX, int iY, int a0, int a1, int b0, int b1, object pObj
DescDE=Verschleudert iAmount Partikel vom angegebenen Typ. Die Partikel werden hinter dem Objekt gezeichnet. Die Zusatzparameter werden zufällig zwischen a0/b0 und a1/b1 gesetzt.

[Function]
Name=CastBool
Return=bool
Parameter=any Value
DescDE=Wandelt einen Wert in einen boolischen Wert (true, false) um. Diese Funktion liefert für alle Werte außer 0 true.

[Function]
Name=CastC4ID
Return=id
Parameter=any Value
DescDE=Wandelt einen Wert in eine ID um.

[Function]
Name=CastInt
Return=int
Parameter=any Value
DescDE=Wandelt einen Wert in einen Integer um.

[Function]
Name=CastObjects
Return=void
Parameter=id id, int iNumber, int iLevel, int iX, int iY
DescDE=Verschleudert iNumber Objekte an angegebener Position mit einer Geschwindigkeit von iLevel. Bei einem lokalen Aufruf haben die erzeugten Objekte den selben Besitzer wie das aufrufende Objekt.

[Function]
Name=CastObjectsX
Return=int
Parameter=id id, int iNumber, int iLevel, int iX, int iY, int angs, int angw
DescDE=Verschleudert iNumber Objekte an angegebener Position mit einer Geschwindigkeit von iLevel mit dem Winkel angw. Bei einem lokalen Aufruf haben die erzeugten Objekte den selben Besitzer wie das aufrufende Objekt.

[Function]
Name=CastPXS
Return=void
Parameter=string szMaterial, int iAmount, int iLevel, int iX, int iY
DescDE=Verschleudert namentlich angegebene Materialpixel an angegebener Position. Bei einem lokalen Aufruf gelten die Koordinaten als Offset zum aufrufenden Objekt.

[Function]
Name=CastPXSX
Return=int
Parameter=string szMaterial, int iAmount, int iLevel, int iX, int iY, int angs, int angw
DescDE=Verschleudert namentlich angegebene Materialpixel an angegebener Position mit angegebenem Winkel. Bei einem lokalen Aufruf gelten die Koordinaten als Offset zum aufrufenden Objekt.

[Function]
Name=CastParticles
Return=bool
Parameter=string szName, int iAmount, int iLevel, int iX, int iY, int a0, int a1, int b0, int b1, object pObj
DescDE=Verschleudert iAmount Partikel vom angegebenen Typ. Die Zusatzparameter werden zufällig zwischen a0/b0 und a1/b1 gesetzt.

[Function]
Name=ChangeDef
Return=bool
Parameter=id idNewDef, object pObj
DescDE=Weist einem Objekt eine neue Definition zu.

[Function]
Name=ChangeEffect
Return=bool
Parameter=string szEffectName, object pTarget, int iIndex, string szNewEffectName, int iNewTimer
DescDE=Ändert den Namen eines Effektes, und damit auch die aufgerufenen Callback-Funktionen.

[Function]
Name=CheckEffect
Return=int
Parameter=string szEffectName, object pTarget, int iPrio, int iTimerIntervall, any var1, any var2, any var3, any var4
DescDE=Führt Fx*Effect (und ggf. auch Fx*Add)-Callbacks in der entsprechenden Effektliste aus, ohne einen Effekt selber zu erstellen. Rückgabewert ist -1, wenn ein anderer Effekt den Effekt abgelehnt hat, und die Effektnummer des aufnehmenden Effektes, wenn der Effekt aufgenommen wurde.

[Function]
Name=CheckEnergyNeedChain
Return=bool
Parameter=object pObj
DescDE=Überprüft, ob ein an das angegebene Objekt angeschlossener Verbraucher Energie benötigt. Dabei werden auch indirekt (also über mehrere Leitungen über einen weiteren Verbraucher) angeschlossene Verbraucher überprüft.

[Function]
Name=ClearLastPlrCom
Return=bool
Parameter=int iPlr
DescDE=Diese Funktion löscht den letzten Befehl (Tastendruck / Mausklick) des Spielers iPlr. Dadurch kann zum Beispiel verhindert werden, dass ein ControlDig als Ende einer Kombo später als ControlDigSingle 
        beim Clonk ankommt und dieser zu graben beginnt

[Function]
Name=ClearMenuItems
Return=int
Parameter=object pMenuObject
DescDE=Entfernt alle Einträge aus einem Menü.

[Function]
Name=ClearParticles
Return=bool
Parameter=string szName, object pObj
DescDE=Entfernt alle Partikel eines angegebenen Typs vom Zielobjekt pObj.

[Function]
Name=ClearScheduleCall
Return=bool
Parameter=object pObj, string szFunction
DescDE=erzeugte verzögerte Funktionsaufrufe ab. Alle momentan wartenden Funktionsaufrufe an
		     die angegebene Funktion und das angegebene Objekt werden abgebrochen.

[Function]
Name=CloseMenu
Return=bool
Parameter=object pObj
DescDE=Schließt das Menü eines Objekts.

[Function]
Name=Collect
Return=bool
Parameter=object pItem, object pTarget
DescDE=Mit diesem Befehl lässt sich beispielsweise das Aufnehmen von Objekten aus Containern heraus realisieren. Wenn die Aufnahme fehlschlug (Beispielsweise durch den RejectCollect-Aufruf oder weil der Container voll war), gibt die Funktion 0 zurück. Ansonsten 1.

[Function]
Name=ComponentAll
Return=bool
Parameter=object pObj, id idComponents
DescDE=Prüft, ob ein Objekt nur aus einem Objekttyp besteht.

[Function]
Name=ComposeContents
Return=object
Parameter=id id, object pObj
DescDE=Erzeugt ein Objekt vom Typ id als Inhalt von pObj. Das Objekt wird aus seinen Komponenten zusammen gesetzt, die in pObj enthalten sein müssen. Andernfalls wird eine Meldung ausgegeben, welche Objekte noch benötigt werden. Auch ComposeContents produziert den Engine Objekt-Call BuildNeedsMaterial, durch den die Meldung über noch benötigtes Material ausgewertet und abgefangen werden kann.

[Function]
Name=Construction
Return=object
Parameter=object creator
DescDE=Wird bei der Erzeugung eines Objekts aufgerufen.

[Function]
Name=Contained
Return=object
Parameter=object pObj
DescDE=Liefert das Objekt, in dem sich pObj befindet. Rückgabewert Null, wenn pObj sich im Freien befindet.

[Function]
Name=Contents
Return=object
Parameter=int iIndex, object pObj
DescDE=Liefert das indizierte Objekt, das in pObj enthalten ist.

[Function]
Name=ContentsCount
Return=int
Parameter=id id, object pObj
DescDE=Liefert die Anzahl der Objekte vom Typ id, die in pObj enthalten sind.

[Function]
Name=Cos
Return=int
Parameter=int iAngle, int iRadius, int iPrec
DescDE=Liefert cos(iAngle) * iRadius.

[Function]
Name=CreateArray
Return=array
Parameter=int Length
DescDE=Erzeugt ein neues, mit Nullen gefülltes Feld.

[Function]
Name=CreateConstruction
Return=object
Parameter=id id, int iXOffset, int iYOffset, int iOwner, int iCompletion, bool fTerrain, bool fCheckSite
DescDE=benutzt werden, wenn ein Gebäude oder eine Baustelle erzeugt werden soll. Bei lokalen Aufrufen dieser Funktion wird die angegebene Position zu Offset-Koordinaten zum aufrufenden Objekt.
Wenn fCheckSite 1 ist, wird die Baustelle vorher auf ihre Eignung überprüft. Ist die Position ungeeignet (z.B. durch unebenen Untergrund oder andere Gebäude), wird beim aufrufenden Objekt eine entsprechende Meldung ausgegeben und die Funktion gibt 0 zurück.

[Function]
Name=CreateContents
Return=object
Parameter=id id, object pObj, int iCount
DescDE=Erzeugt ein Objekt vom Typ id als Inhalt von pObj.

[Function]
Name=CreateMenu
Return=int
Parameter=id idSymbol, object pMenuObject, object pCommandObject, int iExtra, string szCaption, int iExtraData, int iStyle, bool fPermanent, id idMenuID
DescDE=hinzugefügt werden.

[Function]
Name=CreateObject
Return=object
Parameter=id id, int iXOffset, int iYOffset, int iOwner
DescDE=Erzeugt ein Objekt des angegebenen Typs an der angegebenen Position. iXOffset und iYOffset bestimmen die Position in absoluten Pixel-Koordinaten der Landschaft (Mitte Unterkante des Objekts). Bei lokalen Aufrufen dieser Funktion wird die angegebene Position zu Offset-Koordinaten zum aufrufenden Objekt.

[Function]
Name=CreateParticle
Return=bool
Parameter=string szName, int iX, int iY, int iXDir, int iYDir, int a, int b, object pObj, bool fBehind
DescDE=Erzeugt ein Partikel. Das Partikel muss unter dem angegebenen Namen geladen sein. Für weitere Informationen siehe Partikeldokumentation.

[Function]
Name=CreateScriptPlayer
Return=bool
Parameter=string szName, int dwClr, int idTeam, int dwFlags, id idExtraData
DescDE=Scriptspieler können zum Beispiel verwendet werden, um KI-Gegner wie z.B. Bots in Hazard zu realisieren.

[Function]
Name=CrewMember
Return=bool
Parameter=id id
DescDE=Liefert den Wert von "CrewMember" aus der DefCore von id.

[Function]
Name=CustomMessage
Return=bool
Parameter=string message, object obj, int plr, int offset_x, int offset_y, int color, id deco, string portrait, int flags, int iHSize
DescDE=Gibt eine Nachricht aus.

[Function]
Name=DIR_Left
Return=int
Parameter=string message, object obj, int plr, int offset_x, int offset_y, int color, id deco, string portrait, int flags, int iHSize
DescDE=: Richtung nach links

[Function]
Name=DIR_Right
Return=int
Parameter=string message, object obj, int plr, int offset_x, int offset_y, int color, id deco, string portrait, int flags, int iHSize
DescDE=: Richtung nach rechts

[Function]
Name=DeathAnnounce
Return=bool
Parameter=string message, object obj, int plr, int offset_x, int offset_y, int color, id deco, string portrait, int flags, int iHSize
DescDE=Gibt eine Botschaft a la "[name] ist von uns gegangen"  über dem aufrufenden Objekt aus.

[Function]
Name=DebugLog
Return=void
Parameter=string szMessage,  ...
DescDE=.

[Function]
Name=DefinitionCall
Return=any
Parameter=id idDef, string szFunction, any ...
DescDE=()-Zeiger gibt in einem solchen Aufruf 0 zurück (Vergleichbar mit dem Szenarioscript).

[Function]
Name=DigFree
Return=void
Parameter=int iX, int iY, int iRadius
DescDE=Gräbt ein kreisrundes Loch in halbfesten Materialien.

[Function]
Name=DigFreeRect
Return=void
Parameter=int iX, int iY, int iWdt, int iHgt, bool fRequest
DescDE=Gräbt ein rechteckiges Loch in halbfesten Materialien.

[Function]
Name=Distance
Return=int
Parameter=int iX1, int iY1, int iX2, int iY2
DescDE=Berechnet den Abstand zwischen zwei Punkten. Die Funktion entspricht Sqrt((iX2-iX1)^2 + (iY2-iY1)^2;).

[Function]
Name=DoBreath
Return=bool
Parameter=int iChange, object pObj
DescDE=Verändert den Atemwert eines Objekts.

[Function]
Name=DoCon
Return=bool
Parameter=int iChange, object pObj
DescDE=Sinkt die Fertigstellung eines Objekts auf oder unter 0, wird dieses gelöscht.

[Function]
Name=DoCrewExp
Return=bool
Parameter=int iChange, object pObj
DescDE=Gibt einem Clonk Erfahrungspunkte.

[Function]
Name=DoDamage
Return=bool
Parameter=int iChange, object pTarget
DescDE=Verändert den Schadenswert eines Objekts. Bei iChange ungleich Null wird im Zielobjekt außerdem die Funktion Damage aufgerufen. Bei lokalem Aufruf gilt der Besitzer des aufrufenden Objekts als Verursacher des Schadens.

[Function]
Name=DoEnergy
Return=bool
Parameter=int iChange, object pObj, bool fExakt, int iEngType, int iCausedBy
DescDE=Verändert die Energie eines Objekts. Die Energie entspricht bei Gebäuden der elektrischen Energie, und bei Lebewesen der Lebensenergie.

[Function]
Name=DoHomebaseMaterial
Return=bool
Parameter=int iPlr, id idID, int iChange
DescDE=Verändert die Kaufbarkeit von Objekten in der Heimatbasis.

[Function]
Name=DoHomebaseProduction
Return=bool
Parameter=int iPlr, id idID, int iChange
DescDE=Verändert die Nachlieferung von kaufbaren Objekten in der Heimatbasis.

[Function]
Name=DoMagicEnergy
Return=bool
Parameter=int iChange, object pObj, bool fAllowPartial
DescDE=Verändert den Magiewert eines Objekts. Jedoch wird die gewünschte Veränderung vorgabemäßig nur als ganze ausgeführt und daher auch nur, wenn dadurch nicht die Ober- bzw. Untergrenze (physische Fähigkeit des Clonks bzw. 0) überschritten wird. Wenn die Veränderung iChange nicht als ganze ausgeführt werden kann, gibt die Funktion FALSE zurück. Hierdurch kann mit einem einzelnen Funktionsaufruf gleichzeitig überprüft werden, ob eine Transaktion überhaupt möglich ist.

[Function]
Name=DoRGBaValue
Return=int
Parameter=int Val, int iChange, int iSelect
DescDE=

[Function]
Name=DoScore
Return=bool
Parameter=int iPlr, int iChange
DescDE=Verändert den Punktewert eines Spielers. Dieser Wert ergibt zusammen mit dem Spielerwert (Wert aller Objekte im Besitz) die Gesamtpunktezahl des Spielers.

[Function]
Name=DoScoreboardShow
Return=bool
Parameter=int iChange, int iForPlr
DescDE=Ändert den Sichtbarkeitszähler für das Scoreboard. Der intern verwaltete Zähler beginnt bei 0. Ist er größer als 0, wird das Scoreboard gezeigt. Ist er kleiner als 0, wird es verborgen. Ist er gleich 0, wird das Scoreboard nur dann gezeigt, wenn der Spieler die entsprechende Taste (normalweise Tab) drückt.

[Function]
Name=DoWealth
Return=bool
Parameter=int iPlr, int iValue
DescDE=Fügt iValue zum Vermögen eines Spielers hinzu. Abzug ist mittels negativen Werten möglich.

[Function]
Name=DrawDefMap
Return=bool
Parameter=int iX, int iY, int iWdt, int iHgt, string szMapDef
DescDE=Zeichnet eine dynamische Zufallskarte innerhalb eines Bereichs. Dazu wird die angegebene Karte in der Landscape.txt gesucht.

[Function]
Name=DrawMap
Return=bool
Parameter=int iX, int iY, int iWdt, int iHgt, string szMap
DescDE=Zeichnet eine dynamische Zufallskarte innerhalb eines Bereichs. Dazu wird derselbe Generator benutzt, der auch die Karten der Landscape.txt zeichnet.

[Function]
Name=DrawMaterialQuad
Return=bool
Parameter=string szMaterialTexture, int iX1, int iY1, int iX2, int iY2, int iX3, int iY3, int iX4, int iY4, bool sub
DescDE=Zeichnet ein viereckiges Polygon im angegebenen Material mit der angegebenen Textur. Wenn keine Textur angegeben ist, wird Smooth angenommen.

[Function]
Name=DrawParticleLine
Return=int
Parameter=string szKind, int x0, int y0, int x1, int y1, int prtdist, int a, int b0, int b1, int iYDir
DescDE=Erzeugt ein Linie zwischen zwei Punkten aus Partikeln. Rückgabewert ist die Anzahl der erzeugten Partikel.

[Function]
Name=DrawVolcanoBranch
Return=void
Parameter=int iMat, int fX, int fY, int tX, int tY, int iSize
DescDE=Zeichnet einen Vulkanarm mit dem Material, dessen Index gleich iMat ist.

[Function]
Name=EditCursor
Return=object
Parameter=int iMat, int fX, int fY, int tX, int tY, int iSize
DescDE=Liefert im Entwicklermodus der Engine das Objekt, welches sich im gerade unter dem Mauscursor befindet (Modus: Objekte auswählen und verschieben).

[Function]
Name=EffectCall
Return=any
Parameter=object pTarget, int iNumber, string szCommand, any ...
DescDE=Führt einen Funktionsaufruf im angegebenen Effekt durch. Der Aufruf erhält den Befehlskontext des Effektes, und die ersten beiden Aufrufparameter sind immer Zielobjekt und Effektindex. Die weiteren Parameter können frei gewählt werden.

[Function]
Name=EffectVar
Return=&
Parameter=int iVarIndex, object pTarget, int iNumber
DescDE=Liefert eine Referenz auf eine effektlokale Variable. Diese kann zum Lesen und schreiben verwendet werden.

[Function]
Name=EliminatePlayer
Return=bool
Parameter=int iPlr, bool fQuiet
DescDE=Eliminiert einen Spieler. Die Runde gilt für diesen Spieler als verloren.

[Function]
Name=EnergyCheck
Return=bool
Parameter=int iEnergy, object pObj
DescDE=Gibt zurück, ob der Energiewert eines Objekts größer oder gleich iEnergy ist. Wenn die Spielregel "Energiebedarf" nicht aktiviert ist, gibt diese Funktion immer TRUE zurück. Außerdem werden Leitungen dazu motiviert, Energie hierhin zu transferieren.

[Function]
Name=Enter
Return=bool
Parameter=object pTarget, object pObj
DescDE=Versetzt ein Objekt in ein anderes hinein. Bei diesem Vorgang wird weder RejectCollect, noch Collection oder ActivateEntrance im Zielobjekt aufgerufen. Dafür aber RejectEntrance und Entrance im Objekt, das hineinversetzt werden soll.

[Function]
Name=Exit
Return=bool
Parameter=object pObj, int iX, int iY, int iR, int iXDir, int iYDir, int iRDir
DescDE=Versetzt ein Objekt aus seinem Behälter heraus, und setzt optional seine Geschwindigkeit.

[Function]
Name=Explode
Return=bool
Parameter=int iLevel, object pObj, id idEffect, string szParticle
DescDE=Lässt ein Objekt explodieren. Die Explosion beschädigt Landschaft und Objekte, und das Objekt wird mitsamt Inhalt vor der Explosion entfernt. Wenn sich das Objekt in einen anderen Objekt befindet, werden alle anderen Inhaltsobjekte und das enthaltende Objekt beschädigt. Als Verursacher des Schadens gilt der Besitzer des explodierenden Objekts.

[Function]
Name=Extinguish
Return=bool
Parameter=object pObj
DescDE=Löscht das Feuer eines brennenden Objekts.

[Function]
Name=ExtractLiquid
Return=int
Parameter=int iX, int iY
DescDE=Saugt ein Pixel Flüssigkeit an der angegebenen Position ab. Zurückgegeben wird die Materialnummer des abgesogenen Materials; bei Misserfolg -1.

[Function]
Name=ExtractMaterialAmount
Return=int
Parameter=int iX, int iY, int iMat, int iAmount
DescDE=Extrahiert eine bestimmte Menge des gleichen Materials an einer Stelle. Zurückgegeben wird die tatsächlich erfolgreich extrahierte Materialmenge.

[Function]
Name=FatalError
Return=void
Parameter=string szMessage
DescDE=Löst einen Error aus, der bei aktiviertem Debug-Modus im Log und als Nachricht erscheint. Die aktuelle Ausführung wird abgebrochen und der Stacktrace wird ausgegeben.

[Function]
Name=FightWith
Return=bool
Parameter=object pTarget, object pFighter
DescDE=sein.

[Function]
Name=FindBase
Return=object
Parameter=int iPlr, int iIndex
DescDE=Sucht eine Heimatbasis eines Spielers. Die Heimatbasis ist zumeist das Gebäude, auf dem eine Flagge weht.

[Function]
Name=FindConstructionSite
Return=bool
Parameter=id idDef, int iVarNumX, int iVarNumY
DescDE=(iVarNumY). Wenn ein Bauplatz gefunden wird, wird er in den entsprechenden Variablen abgelegt, und es wird TRUE zurückgegeben. Ansonsten ist der Rückgabewert FALSE.

[Function]
Name=FindContents
Return=object
Parameter=id idType, object pObj
DescDE=Liefert das erste in einem Behälter enthaltene Objekt vom Typ idType.

[Function]
Name=FindObject
Return=object
Parameter=id idDef, int iX, int iY, int iWdt, int iHgt, int dwOCF, string szAction, object pActionTarget, any pContainer, object pFindNext
DescDE=Liefert das erste gefundene Objekt, das den angegebenen Suchkriterien entspricht. Sind iWdt und iHgt beide -1, so wird das nächstliegende Objekt gefunden. Sind sie beide 0, wird nur am Punkt iX/iY gesucht. Sind iX, iY, iWdt und iHgt alle 0, gilt als Suchrechteck die gesamte Karte (auch bei lokalen Aufrufen). Es müssen stets die Bedingungen aller Parameter erfüllt sein, die angegeben und nicht 0 sind.

[Function]
Name=FindObject2
Return=object
Parameter=array Criteria,  ...
DescDE=Gibt ein Objekt zurück, das die angegebenen Suchkriterien erfüllt. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form "Find_*" angegeben.

[Function]
Name=FindObjectOwner
Return=object
Parameter=id idDef, int iOwner, int iX, int iY, int iWdt, int iHgt, int dwOCF, string szAction, object pActionTarget, object pFindNext
DescDE=.

[Function]
Name=FindObjects
Return=array
Parameter=array Criteria,  ...
DescDE=Erstellt eine Liste von Objekten, auf die alle angegeben Suchkriterien zutreffen. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form "Find_*" angegeben.

[Function]
Name=FindOtherContents
Return=object
Parameter=id idType, object pObj
DescDE=Liefert das erste Inhaltsobjekt eines Behälters, das nicht vom angegebenen Typ ist.

[Function]
Name=Find_Action
Return=array
Parameter=string szAction
DescDE=Suchkriterium: sucht alle Objekte mit der entsprechenden Aktion.

[Function]
Name=Find_ActionTarget
Return=array
Parameter=object pActionTarget
DescDE=Suchkriterium: sucht alle Objekte mit dem entsprechenden ersten Aktionsziel.

[Function]
Name=Find_Allied
Return=array
Parameter=int iPlr
DescDE=Suchkriterium: sucht alle Objekte die Spielern gehören, die mit dem angegebenen Spieler verbündet sind.

[Function]
Name=Find_And
Return=array
Parameter=array Criteria,  ...
DescDE=Suchkriterium: sucht Objekte, auf die alle angegebenen Suchkriterien zutreffen.

[Function]
Name=Find_AnyContainer
Return=array
Parameter=array Criteria,  ...
DescDE=Suchkriterium: sucht alle Objekte die irgendwo enthalten sind.

[Function]
Name=Find_AtPoint
Return=array
Parameter=int iX, int iY
DescDE=Suchkriterium: sucht alle Objekte, deren Grafikbereich (Shape) den angegebenen Punkt überlappt.

[Function]
Name=Find_Category
Return=array
Parameter=int iCategory
DescDE=Suchkriterium: sucht alle Objekte mit der entsprechenden Kategorie.

[Function]
Name=Find_Container
Return=array
Parameter=object pContainer
DescDE=Suchkriterium: sucht alle Objekte im angegebenen Behälter.

[Function]
Name=Find_Distance
Return=array
Parameter=int iRadius, int iX, int iY
DescDE=Suchkriterium: Sucht alle Objekte, die höchstens den angegebenen Radius vom Bezugspunkt entfernt sind. Wird kein Bezugspunkt angegeben, gilt der Mittelpunkt des aufrufenden Objektes.

[Function]
Name=Find_Exclude
Return=array
Parameter=object pExclude
DescDE=Suchkriterium: das angegebene Objekt wird von der Suche ausgeschlossen.

[Function]
Name=Find_Func
Return=array
Parameter=string strFunction,  ...
DescDE=liefert. Wenn es eine lokale Funktion gibt, wird diese aufgerufen, sonst wenn vorhanden eine globale.

[Function]
Name=Find_Hostile
Return=array
Parameter=int iPlr
DescDE=Suchkriterium: sucht alle Objekte die Spielern gehören, die mit dem angegebenen Spieler verfeindet sind.

[Function]
Name=Find_ID
Return=array
Parameter=id idDef
DescDE=Suchkriterium: sucht alle Objekte mit der angegeben ID.

[Function]
Name=Find_InRect
Return=array
Parameter=int iX, int iY, int iWdt, int iHgt
DescDE=Suchkriterium: sucht alle Objekte im angegebenen Suchrechteck.

[Function]
Name=Find_Layer
Return=array
Parameter=object pLayerObj
DescDE=Suchkriterium: sucht alle Objekte mit dem entsprechenden Layerobjekt.

[Function]
Name=Find_NoContainer
Return=array
Parameter=object pLayerObj
DescDE=Suchkriterium: sucht alle Objekte die im Freien sind.

[Function]
Name=Find_Not
Return=array
Parameter=array Criteria
DescDE=Suchkriterium: findet genau alle Objekte, die nicht das angegebene Kriterium erfüllen.

[Function]
Name=Find_OCF
Return=array
Parameter=int iOCF
DescDE=Suchkriterium: Sucht alle Objekte, bei denen eine der angegebenen Object-Character-Flags gesetzt ist.

[Function]
Name=Find_Or
Return=array
Parameter=array Criteria,  ...
DescDE=Suchkriterium: sucht alle Objekte, auf die mindestens eines der angegebenen Suchkriterien zutrifft.

[Function]
Name=Find_Owner
Return=array
Parameter=int iPlr
DescDE=Suchkriterium: sucht alle Objekte die dem angegebenen Spieler gehören.

[Function]
Name=FinishCommand
Return=bool
Parameter=object pObj, bool fSuccess, int iCommandNum
DescDE=Beendet ein Kommado in der Kommandoliste eines Objekts.

[Function]
Name=FlameConsumeMaterial
Return=bool
Parameter=int iX, int iY
DescDE=Gibt true zurück, wenn das Material an angegebener Position brennbar ist.

[Function]
Name=Fling
Return=bool
Parameter=object pObj, int iXDir, int iYDir, int iPrec, bool fAddSpeed
DescDE=Verschleudert pObj in die angegebene Richtung. Diese Funktion ist für Lebewesen konzipiert, da sie die entsprechenden Aktivitäten setzt. Sie löscht zusätzlich den Killer des Objektes.

[Function]
Name=Format
Return=string
Parameter=string szStr,  ...
DescDE=

[Function]
Name=FrameCounter
Return=int
Parameter=string szStr,  ...
DescDE=Gibt die Nummer des Frames zurück, in dem sich das Spiel befindet. Dieser Zähler beginnt beim Szenarienstart mit 0, und zählt dann mit ca. 37 Frames pro Sekunde hoch (abhängig von der Spielgeschwindigkeit)

[Function]
Name=FreeRect
Return=void
Parameter=int iX, int iY, int iWdt, int iHgt, int iFreeDensity
DescDE=Entfernt alle Materialien innerhalb des angegebenen Rechtecks. Die Koordinaten sind immer global, und der untere und rechte Rand des Rechtecks zählen nicht mit dazu.

[Function]
Name=GBackLiquid
Return=bool
Parameter=int iX, int iY
DescDE=Überprüft ob sich an angegebener Position in der Landschaft Flüssigkeit befindet.

[Function]
Name=GBackSemiSolid
Return=bool
Parameter=int iX, int iY
DescDE=Überprüft ob sich an angegebener Position in der Landschaft feste Materie oder Flüssigkeit befindet. Also alles außer Himmel und Tunnel.

[Function]
Name=GBackSky
Return=bool
Parameter=int iX, int iY
DescDE=Überprüft ob sich an angegebener Position in der Landschaft Himmel befindet.

[Function]
Name=GBackSolid
Return=bool
Parameter=int iX, int iY
DescDE=Überprüft ob sich an angegebener Position in der Landschaft feste Materie befindet. Also alles wo Objekte nicht durchkönnen.

[Function]
Name=GainMissionAccess
Return=bool
Parameter=string szPassword
DescDE=Fügt ein Passwort in die Liste der Missionszugänge ein. Alle Spieler auf dem selben Computer können dann ein Szenario starten, welches in der Scenario.txt dieses Passwort als Voraussetzung enthält. Sinnvollerweise sollte jedes Szenario in einer Reihe von Missionen bei erfolgreichem Beenden der Runde das für die jeweils nächste Mission benötigte Passwort freigeben.

[Function]
Name=GameCall
Return=any
Parameter=string szFunction, any ...
DescDE=Ruft szFunction im Szenario-Script auf. Falls die Funktion nicht im Szenario-Script vorhanden ist, gibt die Funktion Null zurück und verursacht keine Fehlermeldung.

[Function]
Name=GameCallEx
Return=any
Parameter=string szFunction, any ...
DescDE=Ruft szFunction im Szenario-Script und in Spielzielen, Spielregeln und Umweltobjekten auf. Sollte die Funktion nicht vorhanden sein, gibt die Funktion Null zurück und verursacht keine Fehlermeldung.

[Function]
Name=GameOver
Return=bool
Parameter=string szFunction, any ...
DescDE=Beendet die Runde. Die Runde wird für alle überlebenden Spieler als gewonnen gewertet.

[Function]
Name=GetActMapVal
Return=any
Parameter=string strEntry, string strAction, id idDef, int iEntryNr
DescDE=anhand deren dortigem Namen ab.

[Function]
Name=GetActTime
Return=int
Parameter=object pObj
DescDE=Liefert den Zeitraum in Frames, die das angegebene Objekt bereits die aktuelle Aktivität ausgeführt hat.

[Function]
Name=GetAction
Return=string
Parameter=object pObj
DescDE=Liefert den Namen der momentanen Aktivität eines Objekts zurück, "Idle", wenn das Objekt keine Aktivität ausführt.

[Function]
Name=GetActionTarget
Return=object
Parameter=int iTargetIndex, object pObj
DescDE=Liefert die aktuellen Aktivitätszielobjekte eines Objekts.

[Function]
Name=GetAlive
Return=bool
Parameter=object pObj
DescDE=Gibt zurück, ob das Objekt noch am Leben ist.

[Function]
Name=GetBase
Return=int
Parameter=object pObj
DescDE=Liefert die Nummer des Spielers, dessen Heimatbasis pObj ist. Rückgabewert -1 wenn pObj keine Heimatbasis ist.

[Function]
Name=GetBreath
Return=int
Parameter=object pObj
DescDE=Liefert den aktuellen Atemwert eines Objekts in Prozent. 100% stellen hierbei den maximalen Physical-Wert von 100000 dar. Siehe auch DefCore.txt Sektion [Physical]. pObj Null bei lokalem Aufruf.

[Function]
Name=GetCaptain
Return=object
Parameter=int iPlayer
DescDE=Liefert den Captain von iPlayer. Nur bei der Spielregel "Verlust Captain".

[Function]
Name=GetCategory
Return=int
Parameter=object pObj, id idDef
DescDE=geändert. Sie bestimmt das allgemeine Verhalten eines Objekts und dessen Platzierung. Eine mit GetCategory abgefragt Kategorie kann mit dem &-Operator gegen eine C4D_-Konstante geprüft werden.

[Function]
Name=GetChar
Return=int
Parameter=string szText, int iIndex
DescDE=Ermittelt den Zeichencode eines indizierten Zeichens einer Zeichenkette.

[Function]
Name=GetClimate
Return=int
Parameter=string szText, int iIndex
DescDE=Liefert den aktuellen Klimawert. Dieser wird als Konstante zum durch TemperatureRange und Season entstehenden Wert hinzugezählt.

[Function]
Name=GetClrModulation
Return=int
Parameter=object pObj, int iOverlayID
DescDE=().

[Function]
Name=GetColor
Return=int
Parameter=object pObj
DescDE=gesetzt worden sein.

[Function]
Name=GetColorDw
Return=int
Parameter=object pObj
DescDE=gesetzt.

[Function]
Name=GetComDir
Return=int
Parameter=object pObj
DescDE=ab.

[Function]
Name=GetCommand
Return=any
Parameter=object pObj, int iElement, int iCommandNum
DescDE=Gibt Informationen über ein Kommando eines Objekts zurück. Führt das Objekt momentan keine Aktion aus, so wird (bei jedem Wert von iElement) 0 zurückgegeben.

[Function]
Name=GetComponent
Return=int / id
Parameter=id idComponent, int iIndex, object pObj, id idDef
DescDE=Liefert Objektkomponenten.

[Function]
Name=GetCon
Return=int
Parameter=object pObj
DescDE=)

[Function]
Name=GetContact
Return=int
Parameter=object pObject, int iVertex, int dwCNAT
DescDE=übergeben bzw. von der Funktion zurückgegeben.

[Function]
Name=GetController
Return=int
Parameter=object pObj
DescDE=())wird automatisch auch der Controller auf den neuen Besitzer geändert.

[Function]
Name=GetCrew
Return=object
Parameter=int iPlayer, int iIndex
DescDE=Gibt ein Mannschaftsmitglied eines Spielers zurück.

[Function]
Name=GetCrewCount
Return=int
Parameter=int iPlayer
DescDE=Liefert die Anzahl der Mannschaftsmitglieder eines Spielers zurück.

[Function]
Name=GetCrewEnabled
Return=bool
Parameter=object pObj
DescDE=Fragt ab, ob ein Mannschaftsmitglied gegenwärtig angewählt werden kann.

[Function]
Name=GetCrewExtraData
Return=any
Parameter=object pCrew, string strDataName
DescDE=gesetzt wurden.

[Function]
Name=GetCursor
Return=object
Parameter=int iPlayer, int iIndex
DescDE=Gibt den momentan kontrollierten Clonk eines Spielers zurück. Werden mehrere Clonks gelenkt, ist es bei iIndex=0 (oder weggelassen) immer das primär ausgewählte Mannschaftsmitglied. Also das, dem beispielsweise auch die Sicht folgt.

[Function]
Name=GetDamage
Return=int
Parameter=object pObj
DescDE=Fragt den Schadenswert eines Objekts ab.

[Function]
Name=GetDefBottom
Return=int
Parameter=object pObj
DescDE=Fragt die Unterkante eines Objekts ab. Diese entspricht Y-Position + DefCore-OffsetY + DefCore-Height. Eine eventuelle Drehung wird hier nicht mit eingerechnet.

[Function]
Name=GetDefCoreVal
Return=any
Parameter=string strEntry, string strSection, id idDef, int iEntryNr
DescDE=zurück.

[Function]
Name=GetDefinition
Return=id
Parameter=int iIndex, int dwCategory
DescDE=Liefert das ID der indizierten von der Engine in dieser Runde geladenen Objektdefinition der angegebenen Kategorie (dwCategory 0 für alle Objektkategorien).

[Function]
Name=GetDesc
Return=string
Parameter=object pObj, id idDef
DescDE=Gibt die Beschreibung eines Objekts oder einer Objektdefinition zurück. Die Beschreibung wird in Objektdefinitionen in der Desc**.txt angegeben.

[Function]
Name=GetDir
Return=int
Parameter=object pObj
DescDE=Liefert die aktuelle Richtung eines Objekts als DIR_x()-Wert.

[Function]
Name=GetEffect
Return=any
Parameter=string szEffectName, object pTarget, int iIndex, int iQueryVal, int iMaxPriority
DescDE=Fragt Effektdaten ab, oder ermittelt, ob ein bstimmter Effekt vorhanden ist. Der Rückgabetyp richtet sich nach dem abgefragten Wert. Wurde der Effekt nicht gefunden, wird immer 0 zurückgegeben.

[Function]
Name=GetEffectCount
Return=int
Parameter=string szMask, object pTarget, int iMaxPriority
DescDE=Zählt die Effekte in einem Objekt oder globale Effekte.

[Function]
Name=GetEnergy
Return=int
Parameter=object pObj
DescDE=Liefert den aktuellen Energiewert eines Objekts in Prozent. 100% stellen hierbei den maximalen Physical-Wert von 100000 dar. Siehe auch DefCore.txt Sektion [Physical]. pObj Null bei lokalem Aufruf.

[Function]
Name=GetEntrance
Return=bool
Parameter=object pObj
DescDE=Liefert den aktuellen Eintrittsstatus eines Objekts. TRUE bei erlaubtem Eintritt, FALSE bei verbotenem Eintritt.

[Function]
Name=GetGravity
Return=int
Parameter=object pObj
DescDE=Liest die Schwerkraft (in Prozent) aus.

[Function]
Name=GetHiRank
Return=object
Parameter=int iPlayer
DescDE=Liefert den höchstrangigen aktiven Clonk von iPlayer.

[Function]
Name=GetHomebaseMaterial
Return=int
Parameter=int iPlr, id id, int iIndex, int dwCategory
DescDE=Bei angegebenen id gibt die Funktion die Menge der Objekte zurück, die der Spieler in seiner Heimatbasis kaufen kann. iIndex und dwCategory werden hierbei ignoriert. Wird als id Null übergeben, liefert die Funktion den indizierten Objekttyp der entsprechenden Kategorie der kaufbaren Objekte des Spielers. Der Objekttyp (id) taucht in der Liste auf und wird zurückgeliefert, selbst wenn zur Zeit keine Objekte dieses Typs verfügbar sind.

[Function]
Name=GetHomebaseProduction
Return=int
Parameter=int iPlr, id id, int iIndex, int dwCategory
DescDE=Bei angegebenen id gibt die Funktion zurück, wie schnell die Menge der Objekte in der Heimatbasis des Spielers nachgeliefert wird. iIndex und dwCategory werden hierbei ignoriert. Wird als id Null übergeben, liefert die Funktion den indizierten Objekttyp der entsprechenden Kategorie der nachgelieferten Objekte des Spielers. Der Objekttyp (id) taucht in der Liste auf und wird zurückgeliefert, selbst wenn zur Zeit keine Objekte dieses Typs nachgeliefert werden.

[Function]
Name=GetID
Return=id
Parameter=object pObj
DescDE=Gibt die ID eines Objekts zurück.

[Function]
Name=GetIndexOf
Return=int
Parameter=any value, array aArray
DescDE=Gibt den Index von value im Array aArray zurück. Es wird -1 zurückgegeben, wenn value nicht in aArray enthalten ist.

[Function]
Name=GetKeys
Return=array
Parameter=map map
DescDE=Gibt ein Array aller zurzeit gesetzten Keys der map zurück.

[Function]
Name=GetKiller
Return=int
Parameter=object pObj
DescDE=Liefert den Spieler, der zuletzt Energieabzug an einem Objekt verursacht hat.

[Function]
Name=GetLeague
Return=string
Parameter=int iIndex
DescDE=).

[Function]
Name=GetLength
Return=int
Parameter=any szText
DescDE=Ermittelt die Länge einer Zeichenkette oder eines Arrays.

[Function]
Name=GetMagicEnergy
Return=int
Parameter=object pObj
DescDE=Liefert den aktuellen Zauberenergiewert eines Objekts. pObj Null bei lokalem Aufruf.

[Function]
Name=GetMass
Return=int
Parameter=object pObj, id idDef
DescDE=Liefert die Masse eines Objekts inklusive aller Inhaltsobjekte. Bei angegebenem idDef wird pObj ignoriert und stattdessen die Standardmasse der Objektdefinition zurückgegeben. Sind idDef und pObj 0, gilt das aufrufende Objekt als pObj.

[Function]
Name=GetMaterial
Return=int
Parameter=int iX, int iY
DescDE=() verglichen werden kann. Für Himmel gibt die Funktion -1 zurück.

[Function]
Name=GetMaterialColor
Return=int
Parameter=int iMat, int iNumber, int iChannel
DescDE=Ermittelt die Farbe eines Materials.

[Function]
Name=GetMaterialCount
Return=int
Parameter=int iMaterial, bool fReal
DescDE=Liefert die in der Landschaft vorhandene Menge des angegebenen Materials.

[Function]
Name=GetMaterialVal
Return=any
Parameter=string strEntry, string strSection, int iMaterial, int iEntryNr
DescDE=zurück.

[Function]
Name=GetMenu
Return=id
Parameter=object pObj
DescDE=explizit eine andere Menü-ID als idMenuID angegeben wurde. 0 bei keinem Menü oder bei keinem Symbol.

[Function]
Name=GetMenuSelection
Return=int
Parameter=object pObj
DescDE=Ermittelt den gerade ausgewählten Menüeintrag des geöffneten Menüs eines Objekts.

[Function]
Name=GetMissionAccess
Return=bool
Parameter=string strMissionAccess
DescDE=Stellt fest und gibt zurück, ob der Spieler bereits das angegebene Missionszugangspasswort besitzt

[Function]
Name=GetName
Return=string
Parameter=object pObj, id idDef
DescDE=Gibt den Namen eines Objekts oder einer Objektdefinition zurück. Hat das Objekt keinen eigenen Namen, wird der Name der Definition zurückgegeben.

[Function]
Name=GetNeededMatStr
Return=string
Parameter=object pObj
DescDE=Liefert die noch benötigten Baumaterialien des Objekts

[Function]
Name=GetOCF
Return=int
Parameter=object pObj
DescDE=Liefert das Object-Character-Flag eines Objekts. Dieser Wert beschreibt den aktuellen Zustand des Objekts. Der Rückgabewert ist eine Bitmaske und kann mit BitAnd() mit einem OCF_x()-Wert verglichen werden.

[Function]
Name=GetObjectBlitMode
Return=int
Parameter=object pObj, int iOverlayID
DescDE=Liefert den aktuellen Zeichenmodus eines Objekts.

[Function]
Name=GetObjectInfoCoreVal
Return=any
Parameter=string strEntry, string strSection, object pObj, int iEntryNr
DescDE=Bei dem InfoCore handelt es sich um die Informationen eines CrewMembers, die in dem Spieler gespeichert
          werden (*.c4i). Dementsprechend gibt GetObjectInfoCoreVal einen Eigenschaftswert eines Crewmembers
          nach Namen in einer c4i-Datei zurück

[Function]
Name=GetObjectLayer
Return=object
Parameter=object pObj
DescDE=Gibt das Layerobjekt von pObj zurück.

[Function]
Name=GetObjectStatus
Return=int
Parameter=object pObj
DescDE=Gibt den internen Status eines Objekts zurück.

[Function]
Name=GetObjectVal
Return=any
Parameter=string strEntry, string strSection, object pObj, int iEntryNr
DescDE=Gibt einen Eigenschaftswert eines Objekts nach seinem Namen in der Objects.txt zurück.

[Function]
Name=GetOwner
Return=int
Parameter=object pObj
DescDE=Ermittelt den Besitzer eines Objekts.

[Function]
Name=GetPath
Return=map
Parameter=int iFromX, int iFromY, int iToX, int iToY
DescDE=

[Function]
Name=GetPathLength (veraltet)
Return=int
Parameter=int iFromX, int iFromY, int iToX, int iToY
DescDE=Sucht mittels des auch für die Clonk-Wegfindung benutzten Algorithmus
          einen Weg zwischen zwei Punkten der Landschaft und gibt dessen Länge
          zurück. Wurde kein Weg gefunden, gibt die Funktion 0 zurück.

[Function]
Name=GetPhase
Return=int
Parameter=object pObj
DescDE=Liefert die Aktivitätsphase von *pObj. *pObj ist Null bei lokalem Aufruf.

[Function]
Name=GetPhysical
Return=int
Parameter=string szPhysical, int iMode, object pObj, id idDef
DescDE=Liefert die physischen Eigenschaften eines Objekts.

[Function]
Name=GetPlayerByIndex
Return=int
Parameter=int iIndex, int ePlayerType
DescDE=Gibt die indizierte Spielernummer zurück. Die Funktion garantiert für Werte zwischen 0 und GetPlayerCount()-1, dass eine gültige Spielernummer zurückgegeben wird (denn durch eliminierte Spieler und Neubeitritte kann es vorkommen, dass "Löcher" unbelegter Spielernummern in der Liste entstehen!). Damit ist es einfacher, eine Schleife zu schreiben, die alle Spielernummern durchgeht. Ab 4.9.6.0 CR.

[Function]
Name=GetPlayerCount
Return=int
Parameter=int ePlayerType
DescDE=Liefert die Anzahl der Spieler, die momentan im Spiel sind.

[Function]
Name=GetPlayerID
Return=int
Parameter=int iPlayerNumber
DescDE=Gibt die Spieler-ID eines beigetretenen Spielers zurück. Spieler-IDs werden von 1 hochgezählt, und - anders als Spielernummern - nicht wieder benutzt, nachdem ein Spieler eliminiert wurde. Jeder neu beigetetene Spieler hat also eine eigene ID.

[Function]
Name=GetPlayerInfoCoreVal
Return=any
Parameter=string strEntry, string strSection, id iPlayer, int iEntryNr
DescDE=Gibt einen Eigenschaftswert aus der Player.txt eines Spielers zurück.

[Function]
Name=GetPlayerName
Return=string
Parameter=int iPlayer
DescDE=Liefert den Namen eines Spielers. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird 0 zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.

[Function]
Name=GetPlayerTeam
Return=int
Parameter=int iPlr
DescDE=Liefert das Team eines Spielers. Hat der Spieler kein Team, wird 0 zurückgegeben.

[Function]
Name=GetPlayerType
Return=int
Parameter=int iPlayer
DescDE=

[Function]
Name=GetPlayerVal
Return=any
Parameter=string strEntry, string strSection, int iPlayer, int iEntryNr
DescDE=Fragt Eigenschaftswerte eines Spielers anhand dessen Namen ab, wie sie beim Speichern eines Spiels in die game.txt geschrieben werden

[Function]
Name=GetPlrColorDw
Return=int
Parameter=int iPlr
DescDE=Fragt die Spielerfarbe ab. Die Spielerfarbe wird verwendet, um einige Besitzobjekte wie Clonks oder Flaggen, sowie Textnachrichten dieses Spielers einzufärben.

[Function]
Name=GetPlrControlName
Return=string
Parameter=int iPlr, int iCon, bool fShort
DescDE=Gibt den Namen der Taste iCon von iPlr zurück.

[Function]
Name=GetPlrDownDouble
Return=bool
Parameter=int iPlr
DescDE=Gibt zurück, ob der angegebene Spieler als letzte Aktion Doppel-Stopp
          gedrückt hatte. Mit dieser Funktion kann z.B. in ControlThrow überprüft werden,
          ob der Spieler das selektierte Objekt ablegen wollte, anstatt es zu werfen
          (Doppel-Stopp + Werfen).

[Function]
Name=GetPlrExtraData
Return=any
Parameter=int iPlr, string strDataName
DescDE=gesetzt wurden.

[Function]
Name=GetPlrKnowledge
Return=int
Parameter=int iPlr, id id, int iIndex, int dwCategory
DescDE=Bei angegebenen id gibt die Funktion TRUE zurück, wenn der Spieler den Bauplan des betreffenden herstellbaren Objekts besitzt. iIndex und dwCategory werden hierbei ignoriert. Wird als id Null übergeben, liefert die Funktion den indizierten Bauplan der entsprechenden Kategorie des Spielers.

[Function]
Name=GetPlrMagic
Return=bool / id
Parameter=int iPlr, id id, int iIndex
DescDE=Stellt das Magiewissen eines bestimmten Spielers fest.

[Function]
Name=GetPlrValue
Return=int
Parameter=int iPlr
DescDE=Liefert den Spielerwert (Wert aller Objekte im Besitz) eines Spielers.

[Function]
Name=GetPlrValueGain
Return=int
Parameter=int iPlr
DescDE=Liefert die Änderung des Spielerwerts seit Beginn der Runde.

[Function]
Name=GetPlrView
Return=object
Parameter=int iPlr
DescDE=).

[Function]
Name=GetPlrViewMode
Return=int
Parameter=int iPlr
DescDE=

[Function]
Name=GetPortrait
Return=any
Parameter=object pObj, bool fGetID, bool fGetPermanent
DescDE=Fragt Name oder ID des Portraits eines Crew-Mitglieds ab.

[Function]
Name=GetProcedure
Return=string
Parameter=object pObj
DescDE=Gibt die Prozedur der gegenwärtigen Aktivität eines Objekts zurück (z.B. FLOAT, ATTACH, etc.). Bei einer NONE-Prozedur oder keiner Aktivität wird 0 zurückgegeben.

[Function]
Name=GetR
Return=int
Parameter=object pObj
DescDE=Liefert die Rotation in Grad von *pObj. Der Rückgabewert liegt zwischen -180° und 180°. 0° ist der Normalzustand.

[Function]
Name=GetRDir
Return=int
Parameter=object pObj, int iPrecision
DescDE=Liefert die Rotations-Geschwindigkeit von pObj.

[Function]
Name=GetRGBaValue
Return=int
Parameter=int Val, int iSelect
DescDE=

[Function]
Name=GetRank
Return=int
Parameter=object pObj
DescDE=Liefert die Rang-Nummer von pObj. 0 ist ein unbeförderter Clonk. *pObj ist Null bei lokalem Aufruf.

[Function]
Name=GetScenarioVal
Return=any
Parameter=string strEntry, string strSection, int iEntryNr
DescDE=ab

[Function]
Name=GetScore
Return=int
Parameter=int iPlayer
DescDE=Liefert die Punkte die iPlayer hat.

[Function]
Name=GetSeason
Return=int
Parameter=int iPlayer
DescDE=Liefert die aktuelle Jahreszeit. 0 ist Winter, 50 Sommer.

[Function]
Name=GetSelectCount
Return=int
Parameter=int iPlayer
DescDE=Liefert die Anzahl der ausgewählten Clonks von Spieler iPlayer.

[Function]
Name=GetSkyAdjust
Return=int
Parameter=bool fBackColor
DescDE=

[Function]
Name=GetSkyColor
Return=int
Parameter=int iIndex, int iRGB
DescDE=Liefert den Farbwert des Himmels. Mit iRGB kann angegeben werden ob entweder Rot (iRGB ist 0), Grün (iRGB ist 1) oder Blau (iRGB ist 2) zurück gegeben werden soll. Mit iIndex wird festgelegt von welchem Palettenindex (0 - 19) der Wert zurück gegeben werden soll.

[Function]
Name=GetSystemTime
Return=int
Parameter=int iWhat
DescDE=Gibt die momentane Uhrzeit zurück.

[Function]
Name=GetTaggedPlayerName
Return=string
Parameter=int iPlayer
DescDE=Liefert den Namen eines Spielers mit Markup in dessen Spielerfarbe. Wenn die Spielernummer zu keinem gültigen Spieler gehört, wird 0 zurückgegeben. Dadurch kann diese Funktion auch benutzt werden, um zu ermitteln, ob eine Spielernummer gültig ist.

[Function]
Name=GetTeamByIndex
Return=int
Parameter=int iIndex
DescDE=Gibt die indizierte Teamnummer zurück. Die Funktion garantiert für Werte zwischen 0 und GetTeamCount()-1, dass eine gültige Teamnummer zurückgegeben wird (denn durch eliminierte Spieler und Neubeitritte kann es vorkommen, dass "Löcher" unbelegter Teamnummern in der Liste entstehen!). Damit ist es einfacher, eine Schleife zu schreiben, die alle Teamnummern durchgeht.

[Function]
Name=GetTeamColor
Return=int
Parameter=int iTeam
DescDE=Liefert die Farbe eines Teams.

[Function]
Name=GetTeamConfig
Return=int
Parameter=int iConfig
DescDE=Gibt Werte aus der Teams.txt oder aus den Lobby-Einstellungen zurück.

[Function]
Name=GetTeamCount
Return=int
Parameter=
DescDE=Liefert die Anzahl der Teams, die momentan im Spiel sind.

[Function]
Name=GetTeamName
Return=string
Parameter=int iTeam
DescDE=Liefert den Namen eines Teams.

[Function]
Name=GetTemperature
Return=int
Parameter=int iTeam
DescDE=Liefert die globale Temperatur. Werte abhängig von Klima und Jahreszeit zwischen +80 und -80.

[Function]
Name=GetTime
Return=int
Parameter=int iTeam
DescDE=Gibt die Zeit seit Windowsstart in Millisekunden zurück. Kann zur genauen Zeitmessung
					verwendet werden.

[Function]
Name=GetType
Return=int
Parameter=any Value
DescDE=Gibt den Typ des übergebenen Werts zurück.

[Function]
Name=GetUnusedOverlayID
Return=int
Parameter=int iBaseIndex, object pObj
DescDE=Gibt eine ungenutzte Overlay-ID zurück. Es wird der erste freie Overlay nach iBaseIndex zurückgegeben.

[Function]
Name=GetValue
Return=int
Parameter=object pObj, id idDef, object pBase, int iForPlayer
DescDE=

[Function]
Name=GetValues
Return=array
Parameter=map map
DescDE=Gibt ein Array aller zurzeit gesetzten Werte der map zurück.

[Function]
Name=GetVertex
Return=int
Parameter=int iIndex, int iValueToGet, object pObj
DescDE=) eines Objekts. Koordinaten in Relation zur Objektmitte.

[Function]
Name=GetVertexNum
Return=int
Parameter=object pObj
DescDE=Liefert die Anzahl der Vertices eines Objekts.

[Function]
Name=GetVisibility
Return=int
Parameter=object pObj
DescDE=.

[Function]
Name=GetWealth
Return=int
Parameter=int iOwner
DescDE=Liefert das Vermögen von iOwner.

[Function]
Name=GetWind
Return=int
Parameter=int iX, int iY, bool fGlobal
DescDE=Liefert die Windstärke und Richtung an der Position X, Y. Wird die Funktion aus einem Objekt heraus aufgerufen, so ist die Position relativ zur Objektposition. Wenn fGlobal=true, wird der globale Wind zurückgegeben.

[Function]
Name=GetX
Return=int
Parameter=object pObj
DescDE=Liefert die X-Position von *pObj.

[Function]
Name=GetXDir
Return=int
Parameter=object pObj, int iPrecision
DescDE=Liefert die Geschwindigkeit in X-Richtung von pObj.

[Function]
Name=GetY
Return=int
Parameter=object pObj
DescDE=Liefert die Y-Position von *pObj.

[Function]
Name=GetYDir
Return=int
Parameter=object pObj, int iPrecision
DescDE=Liefert die Geschwindigkeit in Y-Richtung von pObj.

[Function]
Name=GlobalN
Return=&
Parameter=string szText
DescDE=Liefert den Inhalt der globalen Variable mit dem Namen szText. Per GlobalN("Name")=Wert; kann der Wert einer benannten globalen Variable gesetzt werden.

[Function]
Name=GrabContents
Return=bool
Parameter=object pObj
DescDE=Entfernt sämtlichen Inhalt von *pObj, und gibt diesen dem aufrufenden Objekt.

[Function]
Name=GrabObjectInfo
Return=bool
Parameter=object pFrom, object pTo
DescDE=Überträgt die Infosektion von einem anderen Objekt zu pFrom bzw. dem aufrufenden Objekt. Die Infosektion enthält Namen, Rang, permantente Physicals, usw. Mit diesem Befehl lassen sich beispielsweise Wiederbelebungen realisieren, indem einfach beim Tod eines Clonks ein neuer erstellt und die Infosektion übertragen wird.

[Function]
Name=HSL
Return=int
Parameter=int byH, int byS, int byL
DescDE=Setzt einen 32Bit-Farbwert aus den drei Parametern zusammen. 0-255 für alle Parameter.

[Function]
Name=HSL2RGB
Return=int
Parameter=int Val
DescDE=

[Function]
Name=HSLa
Return=int
Parameter=int byH, int byS, int byL, int byA
DescDE=Setzt einen 32Bit-Farbwert aus den drei Parametern und einem Durchsichtigkeitswert zusammen. 0-255 für alle Parameter.

[Function]
Name=HideSettlementScoreInEvaluation
Return=void
Parameter=bool fHide
DescDE=Blendet die Siedlungspunkte aus dem Auswertungsdialog am Ende der Runde aus, wenn fHide true ist.

[Function]
Name=Hostile
Return=bool
Parameter=int iPlr1, int iPlr2, bool fCheckOneWayOnly
DescDE=Prüft, ob zwei Spieler verfeindet sind. Dazu reicht es, wenn nur einer von beiden mit dem anderen Spieler verfeindet ist.

[Function]
Name=InLiquid
Return=bool
Parameter=object pObj
DescDE=Gibt TRUE zurück, wenn sich das Objekt in einer Flüssigkeit befindet.

[Function]
Name=Incinerate
Return=bool
Parameter=object pObj
DescDE=Zündet das übergebene Objekt an. In dem jeweiligen Objekt wird ggf. Incineration() aufgerufen

[Function]
Name=IncinerateLandscape
Return=bool
Parameter=int iX, int iY
DescDE=Zündet das Material an der angegebenen Stelle an.

[Function]
Name=InitScenarioPlayer
Return=bool
Parameter=int iPlr, int idTeam
DescDE=Startet einen Spieler so gut wie neu, inklusive Angaben in der Scenario.txt

[Function]
Name=InputCallback
Return=any
Parameter=string szInput
DescDE=aufgerufene Eingabezeile.

[Function]
Name=InsertMaterial
Return=bool
Parameter=int iMat, int iX, int iY, int iXDir, int iYDir
DescDE=Fügt ein Materialpixel an der angegebenen Position in der angegebenen Geschwindigkeit ein.

[Function]
Name=Inside
Return=bool
Parameter=int iVal, int iRange1, int iRange2
DescDE=Gibt TRUE zurück, wenn iVal >= iRange1 und iVal <= iRange2 ist.

[Function]
Name=IsNetwork
Return=bool
Parameter=int iVal, int iRange1, int iRange2
DescDE=Prüft, ob das aktuelle Spiel ein Netzwerkspiel ist.

[Function]
Name=IsRef
Return=bool
Parameter=any Value
DescDE=Prüft, ob Value eine Referenz ist.

[Function]
Name=Jump
Return=bool
Parameter=object pObj
DescDE=Die Funktion gibt zurück, ob die Aktion erfolgreich durchgeführt wurde.

[Function]
Name=Kill
Return=bool
Parameter=object pObj, bool fForced
DescDE=Tötet ein Objekt. Nur Lebewesen.

[Function]
Name=LandscapeHeight
Return=int
Parameter=object pObj, bool fForced
DescDE=Gibt die Höhe der Landschaft in Pixel zurück.

[Function]
Name=LandscapeWidth
Return=int
Parameter=object pObj, bool fForced
DescDE=Gibt die Breite der Landschaft in Pixel zurück.

[Function]
Name=LaunchEarthquake
Return=void
Parameter=int iX, int iY
DescDE=Erzeugt einen Erdbeben an angegebener Stelle. Koordinaten auch bei lokalem Aufruf global

[Function]
Name=LaunchLightning
Return=bool
Parameter=int iX, int iY, int iXAdvance, int iXRange, int iYAdvance, int iYRange, bool fDoGamma
DescDE=Die Position muss auch bei lokalem Aufruf in globalen Koordinaten angegeben werden.

[Function]
Name=LaunchVolcano
Return=bool
Parameter=int iX
DescDE=Erzeugt einen Vulkan an angegebener Position. Da Vulkane immer von der Unterseite der Landschaft ausgehen, wird hier kein Y-Parameter benötigt.

[Function]
Name=LoadScenarioSection
Return=bool
Parameter=string szSection, int dwFlags
DescDE=.

[Function]
Name=LocalN (veraltet)
Return=&
Parameter=string szName, object pObj
DescDE=Gibt eine Referenz auf eine Objektlokale Variable zurück. Diese Referenz kann zum Lesen und Schreiben benutzt werden.

[Function]
Name=LocateFunc
Return=bool
Parameter=string szFunctionName, object pObj, id idDefinition
DescDE=Gibt den Pfad zur Datei per Log aus, aus der angegebene Funktion geladen wurde und zeigt Überladungen an. Weiterhin kann über pObj direkt in einem Objekt gesucht werden, oder, falls pObj==0, in einer Definition über idDefinition.

[Function]
Name=Log
Return=void
Parameter=string szMessage,  ...
DescDE=.

[Function]
Name=MakeCrewMember
Return=bool
Parameter=object pObj, int iPlayer
DescDE=Gibt 1 zurück, wenn das Objekt erfolgreich der Crew hinzugefügt wurde.

[Function]
Name=Material
Return=int
Parameter=string szMaterialName
DescDE=Gibt den Index eines Materials anhand seines Namens zurück. Dieser Index wird in den meisten materialbezogenen Funktionen verwendet.

[Function]
Name=MaterialName
Return=string
Parameter=int iMat
DescDE=Gibt den (internen, englischen) Namen eines Materials zurück.

[Function]
Name=Max
Return=int
Parameter=int iVal1, int iVal2
DescDE=Gibt den größeren der beiden Werte zurück

[Function]
Name=Message
Return=bool
Parameter=string strMessage, object pObj, object ...
DescDE=)

[Function]
Name=Min
Return=int
Parameter=int iVal1, int iVal2
DescDE=Gibt den kleineren der beiden Werte zurück

[Function]
Name=Music
Return=void
Parameter=string szSongName, bool fLoop
DescDE=Spielt ein Musikstück ab. Die entsprechende Datei muss in einer der aktiven Musikdateien vorhanden sein. Sind im ausgewählten Szenario Musikdateien vorhanden, gilt die Szenariodatei als aktive Musikdatei, andernfalls wird die globale Musikdatei Music.c4g genutzt. Bei erfolgreichem Aufruf dieser Funktion wird die Musikwiedergabe aktiviert, auch wenn sie in den Optionen des Menüsystems deaktiviert wurde.

[Function]
Name=MusicLevel
Return=int
Parameter=int iLevel
DescDE=).

[Function]
Name=NO_OWNER
Return=int
Parameter=int iLevel
DescDE=verwendet werden, um einen neutralen Spieler anzugeben.

[Function]
Name=NoContainer
Return=int
Parameter=int iLevel
DescDE=Konstante für FindObject: Suche außerhalb aller Objekte.

[Function]
Name=OCF_Alive
Return=int
Parameter=int iLevel
DescDE=Object character flag: Lebendes Lebewesen.

[Function]
Name=OCF_AttractLightning
Return=int
Parameter=int iLevel
DescDE=-Eigenschaft "AttractLightning" kontrolliert.

[Function]
Name=OCF_Available
Return=int
Parameter=int iLevel
DescDE=Object character flag: Das Objekt kann von einem Clonk theoretisch geholt werden. Das heißt, es liegt entweder frei, oder steckt in einem Behälter, auf den der Clonk zugreifen kann (Gebäude mit Eingang, anfassbare Vehikel, etc.).

[Function]
Name=OCF_Chop
Return=int
Parameter=int iLevel
DescDE=Object character flag: Fällbares Objekt. Normalerweise sind das Bäume.

[Function]
Name=OCF_Collectible
Return=int
Parameter=int iLevel
DescDE=Object character flag: Einsammelbares Objekt.

[Function]
Name=OCF_Collection
Return=int
Parameter=int iLevel
DescDE=Object character flag: Das Objekt bestizt einen Collection-Bereich, ist nicht voll (CollectionLimit), verdreht oder unfertig.

[Function]
Name=OCF_Construct
Return=int
Parameter=int iLevel
DescDE=Object character flag: Baustelle

[Function]
Name=OCF_Container
Return=int
Parameter=int iLevel
DescDE=Object character flag: Das Objekt ist ein Behälter, auf den ein Clonk theoretisch zugreifen kann (Gebäude mit Eingang, anfassbare Vehikel, etc.).

[Function]
Name=OCF_CrewMember
Return=int
Parameter=int iLevel
DescDE=Object character flag: Das Objekt kann theoretisch zu einer Crew hinzugefügt werden oder gehört schon zu einer Crew. Das heißt, es hat den ensprechenden DefCore-Eintrag gesetzt, und lebt.

[Function]
Name=OCF_Edible
Return=int
Parameter=int iLevel
DescDE=-Eintrag "Edible" gesetzt.

[Function]
Name=OCF_Entrance
Return=int
Parameter=int iLevel
DescDE=), das Objekt fertig gebaut und nicht verdreht ist.

[Function]
Name=OCF_Exclusive
Return=int
Parameter=int iLevel
DescDE=-Eintrag "Exclusive" gesetzt.

[Function]
Name=OCF_FightReady
Return=int
Parameter=int iLevel
DescDE=Object character flag: Das Objekt ist ein Lebewesen, hat eine Aktivität und kein ObjectDisabled in dieser Aktivität.

[Function]
Name=OCF_Fullcon
Return=int
Parameter=int iLevel
DescDE=Object character flag: Zu mindestens 100% fertig gebautes Objekt. Das Objekt ist also zum Beispiel keine Baustelle, bzw. als Lebwesen ist es mindestens voll ausgewachsen.

[Function]
Name=OCF_Grab
Return=int
Parameter=int iLevel
DescDE=Object character flag: Anfassbares Objekt

[Function]
Name=OCF_HitSpeed1
Return=int
Parameter=int iLevel
DescDE=Object character flag: Objekt, das sich mit mindestens 1.5 Pixel pro Frame bewegt.

[Function]
Name=OCF_HitSpeed2
Return=int
Parameter=int iLevel
DescDE=Object character flag: Objekt, das sich mit mindestens 2 Pixel pro Frame bewegt.

[Function]
Name=OCF_HitSpeed3
Return=int
Parameter=int iLevel
DescDE=Object character flag: Objekt, das sich mit mindestens 6 Pixel pro Frame bewegt.

[Function]
Name=OCF_HitSpeed4
Return=int
Parameter=int iLevel
DescDE=Object character flag: Objekt, das sich mit mindestens 8 Pixel pro Frame bewegt.

[Function]
Name=OCF_InFree
Return=int
Parameter=int iLevel
DescDE=Object character flag: Die Objektmitte liegt frei.

[Function]
Name=OCF_InLiquid
Return=int
Parameter=int iLevel
DescDE=Object character flag: Das Objekt befindet sich in einer Flüssigkeit.

[Function]
Name=OCF_InSolid
Return=int
Parameter=int iLevel
DescDE=Object character flag: Die Objektmitte steckt im Boden.

[Function]
Name=OCF_Inflammable
Return=int
Parameter=int iLevel
DescDE=Object character flag: Brennbares Objekt

[Function]
Name=OCF_LineConstruct
Return=int
Parameter=int iLevel
DescDE=Object character flag: Am Objekt kann zur Zeit eine Leitung angeschlossen werden.

[Function]
Name=OCF_Living
Return=int
Parameter=int iLevel
DescDE=.

[Function]
Name=OCF_NotContained
Return=int
Parameter=int iLevel
DescDE=Object character flag: Objekt befindet sich im Freien.

[Function]
Name=OCF_OnFire
Return=int
Parameter=int iLevel
DescDE=Object character flag: Brennendes Objekt

[Function]
Name=OCF_PowerConsumer
Return=int
Parameter=int iLevel
DescDE=-Eintrag "LineConnect" geregelt. Das Gebäude muss außerdem fertig gebaut sein.

[Function]
Name=OCF_PowerSupply
Return=int
Parameter=int iLevel
DescDE=-Eintrag "LineConnect" geregelt. Dabei zählen immer reine Energieerzeuger, sowie auch normale Energieverbraucher, wenn sie einen momentanen Energiewert >0 bestizen und eine Energieleitung angeschlossen werden kann. Das Gebäude muss außerdem fertig gebaut sein.

[Function]
Name=OCF_Prey
Return=int
Parameter=int iLevel
DescDE=Object character flag: Beutetier, wie zum Beispiel Wipfe, Clonks, etc.

[Function]
Name=OCF_Rotate
Return=int
Parameter=int iLevel
DescDE=Object character flag: Objekt ist drehbar.

[Function]
Name=Object
Return=object
Parameter=int iObj
DescDE=Wandelt eine Objektnummer in einen Objektpointer um.

[Function]
Name=ObjectCall
Return=any
Parameter=object pObj, string szFunction, any ...
DescDE=Ruft die öffentliche Funktion szFunction in pObj auf. Stattdessen sollte die neue Syntax [pObj]->[szFunction]() oder [pObj]->[idObj]::[szFunction]() genutzt werden.

[Function]
Name=ObjectCount
Return=int
Parameter=id idDef, int iX, int iY, int iWdt, int iHgt, int dwOCF, string szAction, object pActionTarget, any pContainer, int iOwner
DescDE=Sucht Objekte, und gibt deren Anzahl zurück. Sind iWdt und iHgt beide -1, so wird das nächstliegende Objekt gefunden. Sind sie beide 0, wird nur am Punkt iX/iY gesucht. Sind iX, iY, iWdt und iHgt alle 0, gilt als Suchrechteck die gesamte Karte (auch bei lokalen Aufrufen). Es müssen stets die Bedingungen aller Parameter erfüllt sein, die angegeben und nicht 0 sind.

[Function]
Name=ObjectCount2
Return=int
Parameter=array Criteria,  ...
DescDE=Gibt die Anzahl der Objekte zurück, die das angegebenen Suchkriterien erfüllen. Die Suchkriterien werden mittels speziellen Kriteriums-Funktionen der Form "Find_*" angegeben.

[Function]
Name=ObjectDistance
Return=int
Parameter=object pObj2, object pObj
DescDE=Liefert die Distanz zwischen zwei Objekten. Ist pObj 0, Wird die Distanz zwischen dem aufrufenden Objekt und pObj2 gemessen.

[Function]
Name=ObjectNumber
Return=int
Parameter=object pObj
DescDE=in einen Objektpointer zurückverwandelt werden.

[Function]
Name=ObjectSetAction
Return=bool
Parameter=object pObj, string szAction, object pTarget1, object pTarget2, bool fDirect
DescDE=.

[Function]
Name=OnFire
Return=bool
Parameter=object pObj
DescDE=Gibt zurück, ob ein Objekt brennt.

[Function]
Name=Par
Return=any
Parameter=int iIndex
DescDE=Gibt einen der an die Funktion übergebenen Parameter zurück.

[Function]
Name=PathFree
Return=bool
Parameter=int iX1, int iY1, int iX2, int iY2
DescDE=Gibt zurück, ob der Weg zwischen den beiden angegebenen Punkten in der Landschaft frei ist, d.h., ob sich keine festen Materialien auf der Verbindungslinie zwischen den Punkten befinden.

[Function]
Name=PlaceAnimal
Return=object
Parameter=id id
DescDE=des Lebewesens. Rückgabewert ist ein Zeiger auf das neu erzeugte Objekt.

[Function]
Name=PlaceInMaterial
Return=object
Parameter=id idDef, int iMaterial, int iRetries
DescDE=Erzeugt ein Objekt des gewünschten Typs irgendwo in der Landscape im gewünschten Material und liefert es zurück.

[Function]
Name=PlaceObjects
Return=int
Parameter=C4ID id, int iAmount, string Mat, int iX, int iY, int iWdt, int iHgt, bool fOnSurface, bool fNoStuck
DescDE=Erzeugt iAmount viele Objekte im angegebenen Zielrechteck (optional) im angegebenen Material.
Gibt die Anzahl der Iterationen zurück, oder -1 wenn die Erzeugung fehlschlägt.

[Function]
Name=PlaceVegetation
Return=object
Parameter=id id, int iX, int iY, int iWdt, int iHgt, int iGrowth
DescDE=Platziert Vegetation im angegebenen Zielrechteck. Bei lokalen Aufrufen gelten die Koordinaten als Offset zur Mitte des aufrufenden Objekts. Rückgabewert ist ein Zeiger auf das neu erzeugte Objekt.

[Function]
Name=PlayerMessage
Return=bool
Parameter=int iPlr, string szMessage, object pObj,  ...
DescDE=.

[Function]
Name=PlayerObjectCommand
Return=bool
Parameter=int iPlr, string szCommand, object pTarget, int iX, int iY, object pTarget2, int iInterval, any Data, int iRetries, int iBaseMode
DescDE=für mögliche Befehle.

[Function]
Name=PlrMessage
Return=bool
Parameter=string szMessage, int iPlr,  ...
DescDE=.

[Function]
Name=Pow
Return=int
Parameter=int iVal1, int iVal2
DescDE=Errechnet die Potenz von iVal1 und iVal2 ("X hoch Y")

[Function]
Name=PrivateCall
Return=any
Parameter=object pObj, string szFunction, any ...
DescDE=Ruft die private, geschützte oder öffentliche Funktion szFunction in pObj auf. Es sollte überlegt werden, ob der Aufruf wirklich nötig ist.

[Function]
Name=ProtectedCall
Return=any
Parameter=object pObj, string szFunction, any ...
DescDE=Ruft die geschützte oder öffentliche Funktion szFunction in pObj auf. Es sollte überlegt werden, ob der Aufruf wirklich nötig ist.

[Function]
Name=Punch
Return=bool
Parameter=object pObj, int iX
DescDE=Schlägt pObj.

[Function]
Name=PushParticles
Return=bool
Parameter=string szName, int iAX, int iAY
DescDE=Beschleunigt alle Partikel eines angegebenen Typs in die angegebene Richtung.

[Function]
Name=RGB
Return=int
Parameter=int byR, int byG, int byB
DescDE=Setzt einen 32Bit-Farbwert aus den drei Grundfarben zusammen. 0-255 für alle Parameter.

[Function]
Name=RGB2HSL
Return=int
Parameter=int Val
DescDE=Alle Werte sind von 0 bis 255 skaliert.

[Function]
Name=RGBa
Return=int
Parameter=int byR, int byG, int byB, int byA
DescDE=Setzt einen 32Bit-Farbwert aus den drei Grundfarben und einem Durchsichtigkeitswert zusammen. 0-255 für alle Parameter.

[Function]
Name=Random
Return=int
Parameter=int iMaxVal
DescDE=Gibt eine Zufallszahl zwischen 0 und iMaxVal-1 zurück. Der zurückgegebene Wert kann jedoch nicht höher als 32767 sein.

[Function]
Name=RandomX
Return=int
Parameter=int iVal1, int iVal2
DescDE=Liefert einen Zufallswert zwischen iVal1 und iVal2. Dabei ist egal, welcher Wert der größere ist.

[Function]
Name=ReloadDef
Return=bool
Parameter=id idDef
DescDE=Aktualisiert eine Definition. Dieser Befehl kann im Entwicklermodus in der Konsole eingegeben werden, nachdem die Definition auf der Festplatte verändert wurde. Sie muss zuvor geladen gewesen sein.

[Function]
Name=ReloadParticle
Return=bool
Parameter=string szParticle
DescDE=Aktualisiert eine Partikeldefinition. Dieser Befehl kann im Entwicklermodus in der Konsole eingegeben werden, nachdem die Definition auf der Festplatte verändert wurde. Sie muss zuvor geladen gewesen sein.

[Function]
Name=RemoveEffect
Return=bool
Parameter=string szEffectName, object pTarget, int iIndex, bool fDoNoCalls, int iNewTimer
DescDE=Löscht einen Effekt

[Function]
Name=RemoveObject
Return=bool
Parameter=object pObj, bool fEjectContents
DescDE=Entfernt ein Objekt.

[Function]
Name=RemoveVertex
Return=int
Parameter=int iX, object pObj
DescDE=Entfernt einen Vertex von einem Objekt.

[Function]
Name=ResetGamma
Return=void
Parameter=int iRampIndex
DescDE=.

[Function]
Name=ResetPhysical
Return=bool
Parameter=object pObj, string sPhys
DescDE=.

[Function]
Name=Resort
Return=void
Parameter=object pObj
DescDE=Sortiert ein Objekt neu in die Objektliste ein.

[Function]
Name=ResortObject
Return=bool
Parameter=string szResortFunc, object pResortObj
DescDE=Sortiert ein Objekt neu in die Objektliste ein. Die Platzierung ergibt sich nach einer Platzierungsfunktion, die die Objektposition relativ zu jedem anderen Objekt in der Objektliste definieren sollte. Wenn das erste Objekt vor dem zweiten stehen sollte, muss die Funktion einen Wert kleiner Null zurückgeben. Ansonsten einen Wert größer oder gleich Null.

[Function]
Name=ResortObjects
Return=bool
Parameter=string szResortFunc, int iCategory
DescDE=(1) übergeben. Wenn das erste Objekt vor dem zweiten stehen sollte, muss die Funktion einen Wert kleiner Null zurückgeben. Ansonsten einen Wert größer oder gleich Null.

[Function]
Name=Schedule
Return=bool
Parameter=string szScript, int iInterval, int iRepeat, object pObj
DescDE=Führt einen bestimmes Script mit Verzögerung aus.

[Function]
Name=ScheduleCall
Return=bool
Parameter=object pObj, string szFunction, int iInterval, int iRepeat, int ...
DescDE=Ruft eine Funktion nach einer angegebenen Verzögerung auf.

[Function]
Name=ScoreboardCol
Return=int
Parameter=id idDef
DescDE=verwendet werden kann. Diese Funktion ist dann interessant, wenn ein Objekt auf das Scoreboard zugreifen will, aber dabei sicher stellen muss, dass es nicht dieselbe ID wie ein anderes Objekt verwendet.

[Function]
Name=ScriptCounter
Return=int
Parameter=id idDef
DescDE=Gibt den derzeitigen Stand des Scriptzählers fürs Szenarioscript an.

[Function]
Name=ScriptGo
Return=void
Parameter=bool fStart
DescDE=Startet den Scriptzähler, bzw. hält ihn wieder an.

[Function]
Name=ScrollContents
Return=object
Parameter=object pObj
DescDE=Zurückgegeben wird ein Pointer auf das Objekt, das sich nach der Rotation am Anfang der Inhaltsliste befindet.

[Function]
Name=SelectCrew
Return=bool
Parameter=int iPlr, object pObj, bool fSelect
DescDE=Aktiviert bzw. deaktiviert ein Mannschaftsmitglied für die Steuerung.

[Function]
Name=SelectMenuItem
Return=bool
Parameter=int iItem, object pMenuObj
DescDE=Setzt die Auswahl in einem Menu.

[Function]
Name=Sell
Return=bool
Parameter=int iPlr, object pObj
DescDE=Verkauft ein Objekt mitsamt Inhalt.

[Function]
Name=SetAction
Return=bool
Parameter=string szAction, object pTarget1, object pTarget2, bool fDirect
DescDE=.

[Function]
Name=SetActionData
Return=bool
Parameter=int iData, object pObj
DescDE=.

[Function]
Name=SetActionTargets
Return=bool
Parameter=object pTarget1, object pTarget2, object pObj
DescDE=der aktuell gesetzten Aktivität.

[Function]
Name=SetAlive
Return=int
Parameter=bool fAlive, object pObj
DescDE=Legt fest, ob ein Objekt lebt.

[Function]
Name=SetBridgeActionData
Return=bool
Parameter=int iBridgeLength, bool fMoveClonk, bool fWall, int iBridgeMaterial, object pObj
DescDE=Setzt Zusatzparameter für eine aktuell ausgeführte BRIDGE-Prozedur.

[Function]
Name=SetCategory
Return=bool
Parameter=int iCategory, object pObj
DescDE=Ändert die Kategorie eines Objekts.

[Function]
Name=SetClimate
Return=void
Parameter=int iClimate
DescDE=Setzt das Klima (Durchschnittstemperatur).

[Function]
Name=SetClrModulation
Return=bool
Parameter=int dwClr, object pObj, int iOverlayID
DescDE=(255,255,255,128) würde die Grafik halbtransparent machen (sofern Alphaaddition nicht in den Grafikoptionen deaktiviert ist).

[Function]
Name=SetColor
Return=bool
Parameter=int iColor, object pObj
DescDE=bei einem Spieler mit der Spielerfarbe iColor.

[Function]
Name=SetColorDw
Return=bool
Parameter=int dwNewColor, object pObj
DescDE=bei einem Spieler mit der Spielerfarbe dwNewColor.

[Function]
Name=SetComDir
Return=int
Parameter=int iComDir, object pObj
DescDE=)

[Function]
Name=SetCommand
Return=bool
Parameter=object pObj, string szCommand, object pTarget, int iX, int iY, object pTarget2, any Data, int iRetries
DescDE=Gibt einem Objekt ein Kommando, welches dieses selbstständig (ggf. durch automatische Wegfindung) auszuführen versucht.

[Function]
Name=SetComponent
Return=bool
Parameter=id idComponent, int iCount, object pObj
DescDE=Setzt die Anzahl einer Komponente eines Objekts.

[Function]
Name=SetCon
Return=bool
Parameter=int iCon, object pObj
DescDE=Setzt die Fertigstellung eines Objekts auf den angegebenen Wert.

[Function]
Name=SetContactDensity
Return=bool
Parameter=int iDensity, object pObj
DescDE=Legt fest, welche Dichte ein Material haben muss, damit das Objekt mit diesem kollidiert. Standardmäßig liegt dieser Wert bei 50 (dichtes Material).

[Function]
Name=SetController
Return=bool
Parameter=int iNewController, object pObj
DescDE=Ändert den steuernden Spieler eines Objekts.

[Function]
Name=SetCrewEnabled
Return=bool
Parameter=bool fEnabled, object pObj
DescDE=Aktiviert oder deaktiviert Mannschaftsmitglieder. Deaktivierte Mannschaftsmitglieder können nicht mehr vom Spieler angewählt werden. So kann es auch passieren, dass ein Spieler zwar 0 Mannschaftsmitglieder zur Auswahl hat, aber trotzdem nicht eliminiert ist. Nur für Objekte, die auch wirklich zu einer Mannschaft gehören. Deaktivierte Mannschaftsmitglieder sind automatisch nicht mehr ausgewählt.

[Function]
Name=SetCrewExtraData
Return=any
Parameter=object pCrew, string strDataName, any Data
DescDE=Mithilfe dieses Befehls können beliebige, scriptdefinierte Werte unter einem gegebenen Namen im Clonk in der Spielerdatei gespeichert werden.
        Auf diese Weise kann man Daten über einen Clonk in einer Spielerdatei über Szenariogrenzen hinweg erhalten (z.B. für RPGs)
        Zurückgegeben wird (wenn erfolgreich) der gesetzte Wert.

[Function]
Name=SetCrewStatus
Return=bool
Parameter=int iPlr, bool fInCrew, object pCrew
DescDE=Fügt ein Objekt (z.B. einen Clonk) der Crew eines Spielers hinzu oder entfernt dieses aus der Crew. Das Objekt muss die CrewMember-Eigenschaft in der DefCore gesetzt haben.

[Function]
Name=SetCursor
Return=bool
Parameter=int iPlr, object pObj, bool fNoSelectMark, bool fNoSelectArrow
DescDE=Setzt die Auswahlmarkierung eines Spielers auf ein Zielobjekt und aktiviert dieses für die Steuerung.

[Function]
Name=SetDir
Return=int
Parameter=int iDir, object pObj
DescDE=Setzt die Richtung eines Objekts.

[Function]
Name=SetEntrance
Return=int
Parameter=int iStatus
DescDE=Ermöglicht bzw. verhindert das Betreten eines Gebäudes. Nur lokale Aufrufe.

[Function]
Name=SetFilmView
Return=int
Parameter=int iToPlr
DescDE=Setzt die Sicht in Filmwiedergaben auf den angegebenen Spieler.

[Function]
Name=SetFoW
Return=bool
Parameter=bool fEnabled, int iPlayer
DescDE=Schaltet den Nebel des Krieges für einen Spieler ein oder aus.

[Function]
Name=SetGameSpeed
Return=bool
Parameter=int iGameSpeed
DescDE=Setzt die Spielgeschwindigkeit.

[Function]
Name=SetGamma
Return=void
Parameter=int dwClr1, int dwClr2, int dwClr3, int iRampIndex
DescDE=Setzt eine Gammarampe. Mit Gammarampen kann global das Aussehen des gesamten Spieles gesteuert werden, indem jedem Farbkanal eine eigene Tabelle zugewiesen wird, aus der die neue Helligkeit abgelesen wird. Damit kann man zum Beispiel bestimmte Farben speziell hervorheben, alles abdunkeln oder erhellen oder sogar das Bild komplett invertieren.

[Function]
Name=SetGraphics
Return=bool
Parameter=string szGfxName, object pObj, id idSrcDef, int iOverlay, int iOverlayMode, string szAction, int dwBlitMode, object pOvelayObject
DescDE=Ändert die Grafik eines Objekts. Diese beeinflusst die Darstellung des betreffenden Objekts überall im Spiel: In der Landschaft, im Menü oder auf Maussteuerungssymbolen.

[Function]
Name=SetGravity
Return=void
Parameter=int iGravity
DescDE=Setzt die Schwerkraft. Dabei entspricht die Standardgravitation (100%) einer Beschleunigung von 0.2 Pixeln pro Tick² (Zunahme der YDir um 2 pro Tick bei iPrecision=10)

[Function]
Name=SetHostility
Return=bool
Parameter=int iPlr1, int iPlr2, bool fHostile, bool fSilent, bool fNoCalls
DescDE=Setzt das Bündnisverhältnis zwischen zwei Spielern einseitig.

[Function]
Name=SetKiller
Return=bool
Parameter=int iPlr, object pKilledObject
DescDE=Setzt den Killer von pKilledObject auf iPlr.

[Function]
Name=SetLandscapePixel
Return=void
Parameter=int iX, int iY, int dwValue
DescDE=Färbt ein Pixel in der Landschaft ein. Diese Funktion ist nicht im 8Bit-Grafiksystem verfügbar.

[Function]
Name=SetLength
Return=void
Parameter=array aResize, int iSize
DescDE=Verändert die Länge eines Arrays auf den angegebenen Wert. Überzählige Elemente werden dabei gegebenenfalls gelöscht.

[Function]
Name=SetMass
Return=bool
Parameter=int iNewMass, object pObj
DescDE=angegebenen Wert unter [DefCore], Mass. Die tatsächliche Objektmasse ergibt sich durch Hinzurechnen der Masse aller enthaltenen Objekte.

[Function]
Name=SetMatAdjust
Return=void
Parameter=int dwClrMod
DescDE=Setzt die Materialmodulation. Die Materialfarben werden mit der angegebenen Farbe so verrechnet wie auch ColorByOwner-Grafiken.

[Function]
Name=SetMaxPlayer
Return=bool
Parameter=int iNewCount
DescDE=Ändert die Maximalzahl der Spieler, die an der Runde teilnehmen können. Dieser Wert wirkt sich nur auf Neubeitritte aus; es werden keine vorhandenen Spieler eliminiert, um das Limit zu erfüllen.

[Function]
Name=SetMenuDecoration
Return=bool
Parameter=id idNewDeco, object pMenuObj
DescDE=Ändert die Dekoration eines Menüobjektes.

[Function]
Name=SetMenuSize
Return=bool
Parameter=int iCols, int iRows, object pMenuObj
DescDE=Ändert die Größe eines Objektmenüs, so dass die vorgegebene Anzahl an Menüeinträgen in Breite und Höhe hineinpassen.

[Function]
Name=SetName
Return=bool
Parameter=string szNewName, object pObj, id idDef, bool fSetInInfo, bool fMakeValidIfExists
DescDE=Ändert für eine Runde den Namen eines Objekts oder einer Definition.

[Function]
Name=SetNextMission
Return=void
Parameter=string szNextMissionFile, string szButtonText, string szTooltip
DescDE=Verändert den "Diese Runde weiterspielen"-Button beim Endbildschirm so, dass das angegebene Szenario beim Draufklicken gestartet wird. Wird szNextMissionFile auf das Szenario selbst gesetzt, kann so ein Neustart-Button erreicht werden.

[Function]
Name=SetObjDrawTransform
Return=bool
Parameter=int iWidth, int iXSkew, int iXAdjust, int iYSkew, int iHeight, int iYAdjust, object pObj, int iOverlayID
DescDE=Transformiert die Grafik des angegebenen Objektes.

[Function]
Name=SetObjectBlitMode
Return=int
Parameter=int dwNewBlitMod, object pObj, int iOverlayID
DescDE=Ändert den Zeichenmodus für eine Objekts. Die möglichen Werte entsprechen denen des DefCore-Flags BlitMode (siehe Anmerkung). Die Funktion gibt jeweils den vorher gesetzten Blitmodus zurück.

[Function]
Name=SetObjectLayer
Return=bool
Parameter=object pnewlayer, object pObj
DescDE=Ändert das Layerobjekt von pobj auf pnewlayer und alle Inhalte auch. Standardmäßig sind alle Objekte im globalen Layer 0.
		Wenn pnewlayer 0 ist, wird der Layer in den globalen Layer gesetzt. Objekte können nur miteinander interagieren, wenn sie im selben Layer sind.
		Wird das Layerobjekt gelöscht, werden alle Objekte, die diesen Layer hatten, dem globalen Layer zugeordnet.

[Function]
Name=SetObjectOrder
Return=bool
Parameter=object pObjBeforeOrAfter, object pSortObj, bool fAfter
DescDE=Sorgt dafür, dass ein Objekt mit Sicherheit vor oder hinter einem anderen Objekt angeordnet ist. Dadurch lässt sich beispielsweise sicherstellen, dass sich ein Fahrstuhlkorb immer vor dem zugehörigen Fahrstuhl befindet.

[Function]
Name=SetObjectStatus
Return=bool
Parameter=int iNewStatus, object pObj, bool fClearPointers
DescDE=benötigt.

[Function]
Name=SetOwner
Return=bool
Parameter=int iNewOwner, object pObj
DescDE=Ändert den Besitzer eines Objekts.

[Function]
Name=SetPhase
Return=bool
Parameter=int iPhase, object pObj
DescDE=Setzt die Aktivitätsphase eines Objekts.

[Function]
Name=SetPhysical
Return=bool
Parameter=string szPhysical, int iValue, int iMode, object pObj
DescDE=angegebenen Werte temporär oder permanent angepasst werden.

[Function]
Name=SetPicture
Return=bool
Parameter=int iX, int iY, int iWdt, int iHgt, object pObj
DescDE=.

[Function]
Name=SetPlayList
Return=int
Parameter=string szPlayList
DescDE=Setzt die Liste der Musikstücke, die in zufälliger Reihenfolge abgespielt werden sollen (wenn die Musik aktiviert ist). Zurückgegeben wird die Anzahl der aktivierten Musikstücke (Im Netzwerk wird allerdings immer 0 zurückgegeben).

[Function]
Name=SetPlayerTeam
Return=int
Parameter=int iPlr, int idNewTeam, bool fDoNoCalls
DescDE=Teilt einen Spieler einem neuen Team zu. Es wird geprüft, ob in dem neuen Team noch Platz ist (anhand des MaxPlayer-Werts).

[Function]
Name=SetPlrExtraData
Return=any
Parameter=int iPlr, string strDataName, any Data
DescDE=Mithilfe dieses Befehls können beliebige, scriptdefinierte Werte unter einem gegebenen Namen in der Spielerdatei gespeichert werden.
        Auf diese Weise kann man Daten über einen Spieler über Szenariogrenzen hinweg erhalten (z.B. für RPGs)
        Zurückgegeben wird (wenn erfolgreich) der gesetzte Wert.

[Function]
Name=SetPlrKnowledge
Return=int
Parameter=int iPlr, id idDef, bool fRemove
DescDE=Fügt einen Bauplan zum Wissen des Spielers hinzu (oder entfernt ihn bei angegebenem fRemove).

[Function]
Name=SetPlrMagic
Return=int
Parameter=int iPlr, id id, bool Remove
DescDE=Fügt einen Zauber der Liste der verfügbaren Zauber eines Spielers hinzu oder entfernt einen Zauber aus der Liste.

[Function]
Name=SetPlrShowCommand
Return=bool
Parameter=int iPlr, int iCom
DescDE=Für Doppelkommandos (z.B. Doppel-Graben) muss jeweils 128 auf den Kommandowert aufaddiert werden.

[Function]
Name=SetPlrShowControl
Return=bool
Parameter=int iPlr, string szDefString
DescDE=Entsprechend gibt es 3 Blocks von Optionen. Jeder dieser Blocks besteht dabei aus 10 Buchstaben, wobei "_" und " " für "Nein" und jeder andere Buchstabe für "Ja" steht (siehe Beispiel).

[Function]
Name=SetPlrShowControlPos
Return=bool
Parameter=int iPlr, int iPos
DescDE=).

[Function]
Name=SetPlrView
Return=bool
Parameter=int iPlr, object pObj
DescDE=Zentriert das Sichtfenster eines Spielers auf ein Objekt. Die Sicht folgt dem Objekt bis zum nächsten Spielerkommando.

[Function]
Name=SetPlrViewRange
Return=bool
Parameter=int iRange, object pObj, bool fExact
DescDE=Setzt die Sichtweite eines Objekts.

[Function]
Name=SetPortrait
Return=bool
Parameter=string szPortrait, object pTarget, id idSrcDef, bool fPermanent, bool fCopyGfx
DescDE=Ändert das Portrait eines Crew-Mitglieds während des Spiels.

[Function]
Name=SetPosition
Return=int
Parameter=int iX, int iY, object pObj, bool fCheckBounds
DescDE=Verschiebt ein Objekt an die angegebene Position. Dabei wird das Objekt an die exakte Pixelposition gesetzt, und eventuelle, interne Verschiebungen um Pixelbruchteile werden verworfen.

[Function]
Name=SetR
Return=bool
Parameter=int iR, object pObj
DescDE=Setzt die Drehung eines Objekts.

[Function]
Name=SetRDir
Return=bool
Parameter=int iRDir, object pObj, int iPrecision
DescDE=Setzt die Drehungsgeschwindigkeit eines Objekts.

[Function]
Name=SetRGBaValue
Return=int
Parameter=int Val, int iNewVal, int iSelect
DescDE=

[Function]
Name=SetRestoreInfos
Return=void
Parameter=int what
DescDE=Im Spiel nachträglich gemachte Änderungen werden nicht beachtet.

[Function]
Name=SetScoreboardData
Return=void
Parameter=int iRowID, int iColID, string sText, int iData
DescDE=.

[Function]
Name=SetSeason
Return=void
Parameter=int iSeason
DescDE=Setzt die Jahreszeit.

[Function]
Name=SetShape
Return=bool
Parameter=int iX, int iY, int iWdt, int iHgt, object pObj
DescDE=Ändert das interne Objektrechteck eines Objekts. Das Objektrechteck wird beispielsweise für Kollisionsabfragen verwendet. Dies hat keine Auswirkung auf die Darstellung des Objekts.

[Function]
Name=SetSkyAdjust
Return=void
Parameter=int dwClrMod, int dwBackClr
DescDE=Setzt die Himmelsmodulation. Die Himmelsfarben werden mit der angegebenen Farbe so verrechnet wie auch ColorByOwner-Grafiken.

[Function]
Name=SetSkyParallax
Return=void
Parameter=int iMode, int iParX, int iParY, int iXDir, int iYDir, int iX, int iY
DescDE=Verändert Parallaxität und Scrollgeschwindigkeit des Himmels.

[Function]
Name=SetSolidMask
Return=bool
Parameter=int iX, int iY, int iWdt, int iHgt, int iTx, int iTx, object pObj
DescDE=.

[Function]
Name=SetTemperature
Return=void
Parameter=int iTemperature
DescDE=Setzt die globale Temperatur.

[Function]
Name=SetTransferZone
Return=bool
Parameter=int iX, int iY, int iWdt, int iHgt, object pObj
DescDE=Setzt einen neuen Transferbereich für ein Objekt. Führt die Suche der Wegfindung durch einen Transferbereich (dieser gilt für die Wegfindung immer als komplett durchlaufbar), werden für den Clonk ControlTransfer-Aufrufe an das Script des Objekts aufgerufen. In diesen sollte mit Hilfe von Befehlen dafür gesorgt werden, dass der Clonk an seine Zielposition kommt.

[Function]
Name=SetVertex
Return=int
Parameter=int iIndex, int iValueToSet, int iValue, object pObj, int iSetCustomPermanent
DescDE=) eines Objekts. Koordinaten in Relation zur Objektmitte.

[Function]
Name=SetVertexXY
Return=bool
Parameter=int iIndex, int iXPos, int iYPos, object pObj
DescDE=Setzt X und Y eines Vertices zugleich

[Function]
Name=SetViewCursor
Return=bool
Parameter=int iPlr, object pTargetView
DescDE=Setzt die Sicht eines Spielers auf pTargetView.

[Function]
Name=SetViewOffset
Return=BOOL
Parameter=int iPlayer, int iX, int iX
DescDE=Verschiebt die Sicht eines Spielers permanent um einen bestimmten Betrag. Ein erneuter Aufruf überschreibt die Verschiebung wieder, ein Aufruf mit 0-Koordinaten setzt die Sicht wieder in den Normalzustand zurück.

[Function]
Name=SetVisibility
Return=bool
Parameter=int dwVisibility, object pObj
DescDE=Verändert die Sichtbarkeit eines Objekts. Objekte können für beliebige Gruppen sichtbar gemacht werden, indem für dwVisibility eine Bitmaske angegeben wird.

[Function]
Name=SetWealth
Return=bool
Parameter=int iPlr, int iValue
DescDE=Setzt das Vermögen eines Spielers.

[Function]
Name=SetWind
Return=void
Parameter=int iWind
DescDE=Setzt die globale Windrichtung und -stärke.

[Function]
Name=SetXDir
Return=bool
Parameter=int iXDir, object pObj, int iPrecision
DescDE=Setzt die horizontale Geschwindigkeit eines Objekts.

[Function]
Name=SetYDir
Return=bool
Parameter=int iYDir, object pObj, int iPrecision
DescDE=Setzt die vertikale Geschwindigkeit eines Objekts.

[Function]
Name=ShakeFree
Return=void
Parameter=int iX, int iY, int iRadius
DescDE=Löst innerhalb eines kreisförmigen Bereiches halbfestes Material in der Landschaft. Für gelöstes Material wird neu geprüft, ob es in darunterliegendes Material fallen kann. Dadurch kann man zum Beispiel Höhlendecken einstürzen lassen.

[Function]
Name=ShakeObjects
Return=void
Parameter=int iX, int iY, int iRadius
DescDE=()-Aufrufen mit kleinen Zufallswerten auf alle Objekte im Zielbereich.

[Function]
Name=ShiftContents
Return=bool
Parameter=object pObj, bool fShiftBack, id idTarget, bool fDoCalls
DescDE=Sortiert die Inhaltsobjekte so um, dass das nächste Objekt mit anderer ID vorne liegt. Die häufigste Anwendung für diesen Befehl ist ein Inventarwechsel.

[Function]
Name=ShowInfo
Return=bool
Parameter=object pObject
DescDE=Zeigt die Beschreibung eines Objekts in einem kleinen Informationsfenster (intern ein Menü) beim aufrufenden Objekt an.

[Function]
Name=SimFlight
Return=bool
Parameter=int & iX, int & iY, int & iXDir, int & iYDir, int iMinDensity, int iMaxDensity, int iIteration, int iPrecision
DescDE=.

[Function]
Name=Sin
Return=int
Parameter=int iAngle, int iRadius, int iPrec
DescDE=Liefert sin(iAngle) * iRadius.

[Function]
Name=SkyPar_Keep
Return=int
Parameter=int iAngle, int iRadius, int iPrec
DescDE=.

[Function]
Name=Smoke
Return=void
Parameter=int iX, int iY, int iLevel, int dwClr
DescDE=Erzeugt eine Rauchwolke an der angegebenen Position mit angegebener Farbe.

[Function]
Name=SortScoreboard
Return=bool
Parameter=int iColID, bool fReverse
DescDE=Sortiert die Zeilen des Scoreboards nach den Extradaten einer Spalte. Wenn zwei Einträge in dieser Spalte die gleichen Werte besitzen, wird nicht umsortiert. So kann durch sukzessive Aufrufe dieser Funktion nach mehreren Spalten sortiert werden.

[Function]
Name=Sound
Return=bool
Parameter=string szSound, bool fGlobal, object pObj, int iVolume, int iPlayer, int iLoopCount, bool fMultiple, int iCustomFalloffDistance
DescDE=Spielt einen Sound ab. Die entsprechende Sounddatei muss in der Gruppendatei Sound.c4g, in der aktiven Szenariodatei oder in einer geladenen Objektdefinition vorhanden sein. Bei lokalen Aufrufen werden Geräusche abhängig von der aktuellen Position des aufrufenden Objekts abgespielt.

[Function]
Name=SoundLevel
Return=void
Parameter=string szSound, int iVolume, object pObj
DescDE=Spielt einen Soundeffekt permanent in einer Schleife ab, bis er wieder gestopp wird. Die Position ist global, solange pObj nicht angegeben ist; der Sound wird also überall auf der Karte gleichmäßig gehört.

[Function]
Name=Split2Components
Return=bool
Parameter=object pObj
DescDE=Zerlegt ein Objekt in seine Bestandteile. Die Bestandteile werden in zufälliger Drehung und mit geringer Geschwindigkeit in zufälliger Richtung an der Stelle erzeugt, an der sich das Objekt befand. Das Objekt wird anschließend vernichtet. Wenn sich das Objekt in einem Behälter befand, werden auch die Komponenten nach der Erschaffung in den Behälter versetzt.

[Function]
Name=SplitRGBaValue
Return=bool
Parameter=int Val, int iRed, int iGreen, int iBlue, int iAlpha
DescDE=Zerstückelt den 32Bit-Farbwert und schreibt die einzelnen Farbwerte in die jeweiligen angegeben Variablen.

[Function]
Name=Sqrt
Return=int
Parameter=int iValue
DescDE=Zieht die Wurzel aus dem ersten Parameter. Ist der Parameter kleiner als 0, wird einfach 0 zurückgegeben.

[Function]
Name=StartScriptProfiler
Return=bool
Parameter=id idDefScript
DescDE=Startet den Scriptprofiler.

[Function]
Name=StopScriptProfiler
Return=void
Parameter=id idDefScript
DescDE=Stoppt den Scriptprofiler, und gibt das Ergebnis im Log aus.

[Function]
Name=Stuck
Return=bool
Parameter=object pObject
DescDE=Ermittelt, ob ein Objekt feststeckt, d.h., ob sich einer seiner Vertices in festem Material befindet.

[Function]
Name=TestMessageBoard
Return=bool
Parameter=int iPlr, bool fTestIfInUse
DescDE=) existiert. Es gibt auch true zurück, wenn CallMessageBoard aufgerufen wurde, aber es noch nicht angezeigt wird.

[Function]
Name=TrainPhysical
Return=bool
Parameter=string szPhysical, int iTrainBy, int iMaxTrain, object pObj
DescDE=Erhöht den Wert der physischen Eigenschaft eines Objekts um den in iTrainBy angegebenen Wert. Mit diesem Aufruf werden sowohl die permanenten, als auch temporäre und temporär gestapelte Physicals trainiert. Dieser Befehl kann beispielsweise genutzt werden, um nach einem Zauber die Magiephysical zu trainieren.

[Function]
Name=UnselectCrew
Return=bool
Parameter=int iPlr
DescDE=wieder ein Clonk angewählt werden.

[Function]
Name=VIS_All
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist für alle sichtbar. Dieser Wert entspricht 0, und kann logischerweise nicht mit anderen VIS_x-Werten kombiniert werden.

[Function]
Name=VIS_Allies
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist für alle Verbündeten des Besitzers sichtbar.

[Function]
Name=VIS_Enemies
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist für alle Feinde des Besitzers sichtbar.

[Function]
Name=VIS_God
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist nur im allgemeinen Viewport (Sichtfenster im Entwicklermodus oder Spielfläche im Netzwerk ohne Spieler) sichtbar.

[Function]
Name=VIS_LayerToggle
Return=int
Parameter=int iPlr
DescDE=. Die Sichtbarkeit eines Objekts richtet sich nach der Sichtbarkeit des Layers, in dem sich das Objekt befindet: Wenn der Layer in dem sich das Objekt befindet, VIS_LayerToggle hat, dann ist das Objekt unsichtbar, wenn der Layer sichtbar ist. Ist der Layer hingegen unsichtbar, ist die Sichtbarkeit des Objekts unbeeinflusst.

[Function]
Name=VIS_Local
Return=int
Parameter=int iPlr
DescDE=. Die Sichtbarkeit eines Objekts richtet sich jeweils nach den unbenannten, lokalen Variablen in diesem Objekt. Dabei können in jeder lokalen Variable 32 Spieler in einer Bitmaske festgelegt werden.

[Function]
Name=VIS_None
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist für niemanden sichtbar.

[Function]
Name=VIS_OverlayOnly
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist nur als Overlay sichtbar. Kann nicht mit anderen VIS_*-Werten kombiniert werden.

[Function]
Name=VIS_Owner
Return=int
Parameter=int iPlr
DescDE=. Das Objekt ist für den Besitzer sichtbar.

[Function]
Name=Value
Return=int
Parameter=id idDef
DescDE=Gibt einen Definitionswert zurück.

[Function]
Name=VarN
Return=&
Parameter=string szName
DescDE=Gibt eine Referenz auf eine funktionslokale Variable zurück. Diese Referenz kann zum Lesen und Schreiben benutzt werden.

[Function]
Name=VerticesStuck
Return=int
Parameter=object pObj
DescDE=Liefert die Anzahl feststeckender Vertices von *pObj

[Function]
Name=WildcardMatch
Return=string
Parameter=string szStr, string szWildcard
DescDE=Prüft, ob zwei Strings gleich sind. Die Prüfung ist case-sensitiv, außerdem können Wildcards benutzt werden.

[Function]
Name=_inherited
Return=any
Parameter=any ...
DescDE=außerdem failsafe. Das heißt, dass es zu keinem Fehler führt, wenn die Ursprungsfunktion gar nicht existiert.

[Function]
Name=eval
Return=any
Parameter=string strScript
DescDE=Führt einen als String übergebenen Script aus.

[Function]
Name=for
Return=void
Parameter=string strScript
DescDE=

[Function]
Name=goto
Return=bool
Parameter=int iCounter
DescDE=Setzt den Skriptzähler in Szenarioskripten auf den gewünschten Wert. Der Scriptzähler sorgt dafür, dass die ScriptXXX-Funktionen im Szenrienscript aufgerufen werden. Dies funktioniert nicht in Objektscripten, stattdessen sollten TimerCalls oder ActMaps mit StartCall/PhaseCall/EndCall verwendet werden.

[Function]
Name=if
Return=void
Parameter=bool fCondition
DescDE=Wenn fCondition ungleich Null, wird der unmittelbar folgende Block bzw. die unmittelbar folgende Anweisung einmal ausgeführt.

[Function]
Name=inherited
Return=any
Parameter=any ...
DescDE=Ruft die überladene Funktion auf. Funktionen überladen sich, wenn sie beide den gleichen Namen haben.

[Function]
Name=return
Return=void
Parameter=Any retval
DescDE=Beendet die aktuelle Funktion und gibt einen Wert an den Aufrufer zurück.

[Function]
Name=this
Return=object
Parameter=Any retval
DescDE=Liefert einen Zeiger auf das Objekt, in dem der Script ausgeführt gerade wird.

[Function]
Name=while
Return=void
Parameter=bool fCondition
DescDE=Solange fCondition ungleich Null ist, wird der unmittelbar folgende Block bzw. die unmittelbar folgende Anweisung ausgeführt.

